var Ops=Ops||{};Ops.Gl=Ops.Gl||{},Ops.Vars=Ops.Vars||{},Ops.Math=Ops.Math||{},Ops.Json=Ops.Json||{},Ops.Anim=Ops.Anim||{},Ops.Boolean=Ops.Boolean||{},Ops.Trigger=Ops.Trigger||{},Ops.Devices=Ops.Devices||{},Ops.Gl.Matrix=Ops.Gl.Matrix||{},Ops.Gl.Meshes=Ops.Gl.Meshes||{},Ops.Gl.Shader=Ops.Gl.Shader||{},Ops.Gl.Textures=Ops.Gl.Textures||{},Ops.Math.Compare=Ops.Math.Compare||{},Ops.Devices.Mouse=Ops.Devices.Mouse||{},Ops.Gl.TextureEffects=Ops.Gl.TextureEffects||{},Ops.Gl.TextureEffects.Noise=Ops.Gl.TextureEffects.Noise||{},Ops.Gl.MainLoop=function(){function e(){function e(){P&&(P.style.display="block")}function n(){P&&(P.style.display="none")}if(t.patch.cgl.canvas.addEventListener("mouseleave",n),t.patch.cgl.canvas.addEventListener("mouseenter",e),l.get()){if(!P){P=document.createElement("div");var r=t.patch.cgl.canvas.parentElement;r&&r.appendChild(P),P.addEventListener("mouseenter",e),P.addEventListener("click",function(e){CABLES.UI&&!e.shiftKey?gui.cycleRendererSize():u.fullScreen()})}P.style.padding="10px",P.style.position="absolute",P.style.right="5px",P.style.top="5px",P.style.width="20px",P.style.height="20px",P.style.cursor="pointer",P.style["border-radius"]="40px",P.style.background="#444",P.style["z-index"]="9999",P.style.display="none",P.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 490 490" style="width:20px;height:20px;" xml:space="preserve" width="512px" height="512px"><g><path d="M173.792,301.792L21.333,454.251v-80.917c0-5.891-4.776-10.667-10.667-10.667C4.776,362.667,0,367.442,0,373.333V480     c0,5.891,4.776,10.667,10.667,10.667h106.667c5.891,0,10.667-4.776,10.667-10.667s-4.776-10.667-10.667-10.667H36.416     l152.459-152.459c4.093-4.237,3.975-10.99-0.262-15.083C184.479,297.799,177.926,297.799,173.792,301.792z" fill="#FFFFFF"/><path d="M480,0H373.333c-5.891,0-10.667,4.776-10.667,10.667c0,5.891,4.776,10.667,10.667,10.667h80.917L301.792,173.792     c-4.237,4.093-4.354,10.845-0.262,15.083c4.093,4.237,10.845,4.354,15.083,0.262c0.089-0.086,0.176-0.173,0.262-0.262     L469.333,36.416v80.917c0,5.891,4.776,10.667,10.667,10.667s10.667-4.776,10.667-10.667V10.667C490.667,4.776,485.891,0,480,0z" fill="#FFFFFF"/><path d="M36.416,21.333h80.917c5.891,0,10.667-4.776,10.667-10.667C128,4.776,123.224,0,117.333,0H10.667     C4.776,0,0,4.776,0,10.667v106.667C0,123.224,4.776,128,10.667,128c5.891,0,10.667-4.776,10.667-10.667V36.416l152.459,152.459     c4.237,4.093,10.99,3.975,15.083-0.262c3.992-4.134,3.992-10.687,0-14.82L36.416,21.333z" fill="#FFFFFF"/><path d="M480,362.667c-5.891,0-10.667,4.776-10.667,10.667v80.917L316.875,301.792c-4.237-4.093-10.99-3.976-15.083,0.261     c-3.993,4.134-3.993,10.688,0,14.821l152.459,152.459h-80.917c-5.891,0-10.667,4.776-10.667,10.667s4.776,10.667,10.667,10.667     H480c5.891,0,10.667-4.776,10.667-10.667V373.333C490.667,367.442,485.891,362.667,480,362.667z" fill="#FFFFFF"/></g></svg>'}else P&&(P.style.display="none",P.remove(),P=null)}Op.apply(this,arguments);var t=this,n=t.inValue("FPS Limit",0),r=t.outFunction("trigger"),o=t.outValue("width"),a=t.outValue("height"),i=(t.inValueBool("Reduce FPS loading"),t.inValueBool("Clear",!0)),l=t.inValueBool("Fullscreen Button",!1),s=t.inValueBool("Active",!0),d=t.inValueBool("Hires Displays",!1);d.onChange=function(){d.get()?t.patch.cgl.pixelDensity=window.devicePixelRatio:t.patch.cgl.pixelDensity=1,t.patch.cgl.updateSize(),CABLES.UI&&gui.setLayout()};var u=t.patch.cgl,c=0,f=0;t.patch.cgl||t.uiAttr({error:"No webgl cgl context"});var g=vec3.create();vec3.set(g,0,0,0);var p=vec3.create();vec3.set(p,0,0,-2),l.onChange=e,setTimeout(e,100);var P=null;n.onChange=function(){t.patch.config.fpsLimit=n.get()||0},t.onDelete=function(){u.gl.clearColor(0,0,0,0),u.gl.clear(u.gl.COLOR_BUFFER_BIT|u.gl.DEPTH_BUFFER_BIT),t.patch.removeOnAnimFrame(t)},t.patch.loading.setOnFinishedLoading(function(e){t.patch.config.fpsLimit=n.get()}),t.onAnimFrame=function(e){if(s.get()&&!u.aborted&&0!==u.canvas.clientWidth&&0!==u.canvas.clientHeight){if(t.patch.loading.getProgress()<1&&(t.patch.config.fpsLimit=5),-1==u.canvasWidth)return void u.setCanvas(t.patch.config.glCanvasId);(u.canvasWidth!=o.get()||u.canvasHeight!=a.get())&&(o.set(u.canvasWidth),a.set(u.canvasHeight)),CABLES.now()-f>1e3&&(CGL.fpsReport=CGL.fpsReport||[],t.patch.loading.getProgress()>=1&&0!==f&&CGL.fpsReport.push(c),c=0,f=CABLES.now()),CGL.MESH.lastShader=null,CGL.MESH.lastMesh=null,u.renderStart(u,g,p),i.get()&&(u.gl.clearColor(0,0,0,1),u.gl.clear(u.gl.COLOR_BUFFER_BIT|u.gl.DEPTH_BUFFER_BIT)),r.trigger(),CGL.MESH.lastMesh&&CGL.MESH.lastMesh.unBind(),CGL.Texture.previewTexture&&(CGL.Texture.texturePreviewer||(CGL.Texture.texturePreviewer=new CGL.Texture.texturePreview(u)),CGL.Texture.texturePreviewer.render(CGL.Texture.previewTexture)),u.renderEnd(u),u.frameStore.phong||(u.frameStore.phong={}),c++}}},Ops.Gl.MainLoop.prototype=new CABLES.Op,Ops.Gl.Meshes.Rectangle=function(){function e(){var e=o.get(),t=a.get(),n=0,r=0;"string"==typeof e&&(e=parseFloat(e)),"string"==typeof t&&(t=parseFloat(t)),"center"==i.get()&&(n=0),"right"==i.get()&&(n=-e/2),"left"==i.get()&&(n=+e/2),"center"==l.get()&&(r=0),"top"==l.get()&&(r=-t/2),"bottom"==l.get()&&(r=+t/2);var c,T,h=[],x=[],m=[],v=[],O=Math.round(d.get()),_=Math.round(s.get()),E=e/_,C=t/O;for(T=0;O>=T;T++)for(c=0;_>=c;c++)h.push(c*E-o.get()/2+n),"xz"==u.get()&&h.push(0),h.push(T*C-a.get()/2+r),"xy"==u.get()&&h.push(0),x.push(c/_),x.push(1-T/O),"xz"==u.get()&&(m.push(0),m.push(1),m.push(0)),"xy"==u.get()&&(m.push(0),m.push(0),m.push(-1));for(c=0;_>c;c++)for(T=0;O>T;T++){var w=c+(_+1)*T,L=w,U=w+1,y=w+_+1,A=w+1+_+1;v.push(L),v.push(y),v.push(U),v.push(U),v.push(y),v.push(A)}p.clear(),p.vertices=h,p.texCoords=x,p.verticesIndices=v,p.vertexNormals=m,P?P.setGeom(p):P=new CGL.Mesh(g,p),f.set(null),f.set(p)}Op.apply(this,arguments);var t=this,n=t.inFunction("render"),r=t.addOutPort(new Port(t,"trigger",OP_PORT_TYPE_FUNCTION)),o=t.inValue("width",1),a=t.inValue("height",1),i=t.addInPort(new Port(t,"pivot x",OP_PORT_TYPE_VALUE,{display:"dropdown",values:["center","left","right"]})),l=t.addInPort(new Port(t,"pivot y",OP_PORT_TYPE_VALUE,{display:"dropdown",values:["center","top","bottom"]})),s=t.inValueInt("num columns",1),d=t.inValueInt("num rows",1),u=t.addInPort(new Port(t,"axis",OP_PORT_TYPE_VALUE,{display:"dropdown",values:["xy","xz"]})),c=t.inValueBool("Active",!0),f=t.addOutPort(new Port(t,"geometry",OP_PORT_TYPE_OBJECT));f.ignoreValueSerialize=!0;var g=t.patch.cgl;u.set("xy"),i.set("center"),l.set("center");var p=new CGL.Geometry,P=null;u.onChange=e,i.onChange=e,l.onChange=e,o.onChange=e,a.onChange=e,d.onChange=e,s.onChange=e,e(),n.onTriggered=function(){c.get()&&P&&P.render(g.getShader()),r.trigger()}},Ops.Gl.Meshes.Rectangle.prototype=new CABLES.Op,Ops.Trigger.Sequence=function(){Op.apply(this,arguments);var e=this,t=e.addInPort(new Port(e,"exe",OP_PORT_TYPE_FUNCTION)),n=[],r=[],o=function(){for(var e=0;e<r.length;e++)r[e].trigger()};t.onTriggered=o;for(var a=16,i=0;a>i;i++)if(r.push(e.addOutPort(new Port(e,"trigger "+i,OP_PORT_TYPE_FUNCTION))),a-1>i){var l=e.addInPort(new Port(e,"exe "+i,OP_PORT_TYPE_FUNCTION));l.onTriggered=o,n.push(l)}},Ops.Trigger.Sequence.prototype=new CABLES.Op,Ops.Gl.Orthogonal=function(){Op.apply(this,arguments);var e=this;e.name="Orthogonal";var t=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),n=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),r=e.addInPort(new Port(e,"left",OP_PORT_TYPE_VALUE)),o=e.addInPort(new Port(e,"right",OP_PORT_TYPE_VALUE)),a=e.addInPort(new Port(e,"bottom",OP_PORT_TYPE_VALUE)),i=e.addInPort(new Port(e,"top",OP_PORT_TYPE_VALUE)),l=e.addInPort(new Port(e,"frustum near",OP_PORT_TYPE_VALUE)),s=e.addInPort(new Port(e,"frustum far",OP_PORT_TYPE_VALUE));r.set(-1),o.set(1),a.set(-1),i.set(1),l.set(.01),s.set(2e3);var d=e.patch.cgl;t.onTriggered=function(){var e=1;d.pushPMatrix(),mat4.ortho(d.pMatrix,r.get()*e,o.get()*e,a.get()*e,i.get()*e,parseFloat(l.get()),parseFloat(s.get())),n.trigger(),d.popPMatrix()}},Ops.Gl.Orthogonal.prototype=new CABLES.Op,Ops.Gl.Render2Texture=function(){function e(){i.get()?(l.setUiAttribs({hidePort:!0,greyout:!0}),s.setUiAttribs({hidePort:!0,greyout:!0})):(l.setUiAttribs({hidePort:!1,greyout:!1}),s.setUiAttribs({hidePort:!1,greyout:!1}))}function t(){if(!T||h){if(T&&T["delete"](),r.glVersion>=2){var e=!0,t=4;"none"==a.get()&&(t=0,e=!1),"2x"==a.get()&&(t=2),"4x"==a.get()&&(t=4),"8x"==a.get()&&(t=8),T=new CGL.Framebuffer2(r,8,8,{isFloatingPointTexture:g.get(),multisampling:e,depth:p.get(),multisamplingSamples:t,clear:P.get()})}else T=new CGL.Framebuffer(r,8,8,{isFloatingPointTexture:g.get()});"nearest"==d.get()?T.setFilter(CGL.Texture.FILTER_NEAREST):"linear"==d.get()?T.setFilter(CGL.Texture.FILTER_LINEAR):"mipmap"==d.get()&&T.setFilter(CGL.Texture.FILTER_MIPMAP),c.set(T.getTextureColor()),f.set(T.getTextureDepth()),h=!1}i.val&&(l.set(r.getViewPort()[2]),s.set(r.getViewPort()[3])),(T.getWidth()!=l.get()||T.getHeight()!=s.get())&&T.setSize(l.get(),s.get()),T.renderStart(r),u.trigger(),T.renderEnd(r),r.resetViewPort()}Op.apply(this,arguments);var n=this,r=n.patch.cgl;n.name="render to texture";var o=n.addInPort(new Port(n,"render",OP_PORT_TYPE_FUNCTION)),a=n.inValueSelect("MSAA",["none","2x","4x","8x"],"none"),i=n.addInPort(new Port(n,"use viewport size",OP_PORT_TYPE_VALUE,{display:"bool"})),l=n.inValueInt("texture width"),s=n.inValueInt("texture height"),d=n.addInPort(new Port(n,"filter",OP_PORT_TYPE_VALUE,{display:"dropdown",values:["nearest","linear","mipmap"]})),u=n.addOutPort(new Port(n,"trigger",OP_PORT_TYPE_FUNCTION)),c=n.outTexture("texture"),f=n.outTexture("textureDepth"),g=n.inValueBool("HDR"),p=n.inValueBool("Depth",!0),P=n.inValueBool("Clear",!0),T=null;l.set(512),s.set(512),i.set(!0),d.set("linear");var h=!0;i.onChange=e,g.onChange=function(){h=!0},p.onChange=function(){h=!0},P.onChange=function(){h=!0};var x=function(){h=!0};a.onChange=function(){h=!0},o.onTriggered=t,d.onValueChange(x),e()},Ops.Gl.Render2Texture.prototype=new CABLES.Op,Ops.Gl.Shader.BasicMaterial=function(){function e(){p.get()&&(s.gl.activeTexture(s.gl.TEXTURE0),s.gl.bindTexture(s.gl.TEXTURE_2D,p.get().tex)),r.textureOpacity.get()&&(s.gl.activeTexture(s.gl.TEXTURE1),s.gl.bindTexture(s.gl.TEXTURE_2D,r.textureOpacity.get().tex))}function t(){d&&(s.setShader(d),d.bindTextures(),i.trigger(),s.setPreviousShader())}function n(){O||(O=new CGL.Uniform(d,"f","diffuseRepeatX",h),_=new CGL.Uniform(d,"f","diffuseRepeatY",x),E=new CGL.Uniform(d,"f","texOffsetX",m),C=new CGL.Uniform(d,"f","texOffsetY",v)),O.setValue(h.get()),_.setValue(x.get()),E.setValue(m.get()),C.setValue(v.get())}Op.apply(this,arguments);var r=this,o={};o.shader_frag="{{MODULES_HEAD}}\n\n\nIN vec2 texCoord;\n#ifdef HAS_TEXTURES\n    IN vec2 texCoordOrig;\n    #ifdef HAS_TEXTURE_DIFFUSE\n        uniform sampler2D tex;\n    #endif\n    #ifdef HAS_TEXTURE_OPACITY\n        uniform sampler2D texOpacity;\n   #endif\n#endif\nuniform float r;\nuniform float g;\nuniform float b;\nuniform float a;\n\nvoid main()\n{\n    {{MODULE_BEGIN_FRAG}}\n    vec4 col=vec4(r,g,b,a);\n    \n    #ifdef HAS_TEXTURES\n        #ifdef HAS_TEXTURE_DIFFUSE\n\n           col=texture2D(tex,vec2(texCoord.x,(1.0-texCoord.y)));\n\n//         col=texture2D(tex,vec2(texCoords.x*1.0,(1.0-texCoords.y)*1.0));\n           #ifdef COLORIZE_TEXTURE\n               col.r*=r;\n               col.g*=g;\n               col.b*=b;\n           #endif\n      #endif\n      col.a*=a;\n      #ifdef HAS_TEXTURE_OPACITY\n      \n            #ifdef TRANSFORMALPHATEXCOORDS\n                col.a*=texture2D(texOpacity,vec2(texCoordOrig.s,1.0-texCoordOrig.t)).g;\n            #endif\n            #ifndef TRANSFORMALPHATEXCOORDS\n                col.a*=texture2D(texOpacity,vec2(texCoord.s,1.0-texCoord.t)).g;\n            #endif\n       #endif\n       \n   #endif\n\n    {{MODULE_COLOR}}\n\n\n   outColor = col;\n}\n",o.shader_vert="{{MODULES_HEAD}}\n\nIN vec3 vPosition;\nIN vec3 attrVertNormal;\nOUT vec3 norm;\nOUT vec2 texCoord;\nOUT vec2 texCoordOrig;\n\n    IN vec2 attrTexCoord;\n#ifdef HAS_TEXTURES\n    #ifdef TEXTURE_REPEAT\n        uniform float diffuseRepeatX;\n        uniform float diffuseRepeatY;\n        uniform float texOffsetX;\n        uniform float texOffsetY;\n\n    #endif\n#endif\n\nuniform mat4 projMatrix;\nuniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\n\nvoid main()\n{\n    mat4 mMatrix=modelMatrix;\n    mat4 mvMatrix;\n    \n    texCoordOrig=attrTexCoord;\n    texCoord=attrTexCoord;\n    #ifdef HAS_TEXTURES\n        #ifdef TEXTURE_REPEAT\n            texCoord.x=texCoord.x*diffuseRepeatX+texOffsetX;\n            texCoord.y=texCoord.y*diffuseRepeatY+texOffsetY;\n        #endif\n   #endif\n\n   vec4 pos = vec4( vPosition, 1. );\n\n\n    #ifdef BILLBOARD\n       vec3 position=vPosition;\n       mvMatrix=viewMatrix*modelMatrix;\n\n       gl_Position = projMatrix * mvMatrix * vec4((\n           position.x * vec3(\n               mvMatrix[0][0],\n               mvMatrix[1][0],\n               mvMatrix[2][0] ) +\n           position.y * vec3(\n               mvMatrix[0][1],\n               mvMatrix[1][1],\n               mvMatrix[2][1]) ), 1.0);\n    #endif\n\n    {{MODULE_VERTEX_POSITION}}\n\n    #ifndef BILLBOARD\n        mvMatrix=viewMatrix * mMatrix;\n    #endif\n\n\n    #ifndef BILLBOARD\n        // gl_Position = projMatrix * viewMatrix * modelMatrix * pos;\n        gl_Position = projMatrix * mvMatrix * pos;\n    #endif\n}\n";var a=r.addInPort(new Port(r,"render",OP_PORT_TYPE_FUNCTION)),i=r.addOutPort(new Port(r,"trigger",OP_PORT_TYPE_FUNCTION)),l=r.addOutPort(new Port(r,"shader",OP_PORT_TYPE_OBJECT));l.ignoreValueSerialize=!0;var s=r.patch.cgl,d=new CGL.Shader(s,"BasicMaterial");d.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]),d.bindTextures=e,d.setSource(o.shader_vert,o.shader_frag),l.set(d),a.onTriggered=t;var u=r.addInPort(new Port(r,"r",OP_PORT_TYPE_VALUE,{display:"range",colorPick:"true"}));u.set(Math.random()),u.uniform=new CGL.Uniform(d,"f","r",u);var c=r.addInPort(new Port(r,"g",OP_PORT_TYPE_VALUE,{display:"range"}));c.set(Math.random()),c.uniform=new CGL.Uniform(d,"f","g",c);var f=r.addInPort(new Port(r,"b",OP_PORT_TYPE_VALUE,{display:"range"}));f.set(Math.random()),f.uniform=new CGL.Uniform(d,"f","b",f);var g=r.addInPort(new Port(r,"a",OP_PORT_TYPE_VALUE,{display:"range"}));g.uniform=new CGL.Uniform(d,"f","a",g),g.set(1);var p=this.addInPort(new Port(this,"texture",OP_PORT_TYPE_TEXTURE,{preview:!0,display:"createOpHelper"})),P=null;d.bindTextures=e,p.onChange=function(){p.get()?(d.hasDefine("HAS_TEXTURE_DIFFUSE")||d.define("HAS_TEXTURE_DIFFUSE"),P||(P=new CGL.Uniform(d,"t","texDiffuse",0)),n()):(d.removeUniform("texDiffuse"),d.removeDefine("HAS_TEXTURE_DIFFUSE"),P=null)},r.textureOpacity=r.addInPort(new Port(r,"textureOpacity",OP_PORT_TYPE_TEXTURE,{preview:!0,display:"createOpHelper"})),r.textureOpacityUniform=null,r.textureOpacity.onChange=function(){if(r.textureOpacity.get()){if(null!==r.textureOpacityUniform)return;d.removeUniform("texOpacity"),d.define("HAS_TEXTURE_OPACITY"),r.textureOpacityUniform||(r.textureOpacityUniform=new CGL.Uniform(d,"t","texOpacity",1))}else d.removeUniform("texOpacity"),d.removeDefine("HAS_TEXTURE_OPACITY"),r.textureOpacityUniform=null},r.colorizeTexture=r.addInPort(new Port(r,"colorizeTexture",OP_PORT_TYPE_VALUE,{display:"bool"})),r.colorizeTexture.set(!1),r.colorizeTexture.onChange=function(){r.colorizeTexture.get()?d.define("COLORIZE_TEXTURE"):d.removeDefine("COLORIZE_TEXTURE")},r.doBillboard=r.addInPort(new Port(r,"billboard",OP_PORT_TYPE_VALUE,{display:"bool"})),r.doBillboard.set(!1),r.doBillboard.onChange=function(){r.doBillboard.get()?d.define("BILLBOARD"):d.removeDefine("BILLBOARD")};var T=r.inValueBool("Opacity TexCoords Transform",!1);T.onChange=function(){T.get()?d.define("TRANSFORMALPHATEXCOORDS"):d.removeDefine("TRANSFORMALPHATEXCOORDS")};var h=(r.addInPort(new Port(r,"preMultiplied alpha",OP_PORT_TYPE_VALUE,{display:"bool"})),r.addInPort(new Port(r,"diffuseRepeatX",OP_PORT_TYPE_VALUE))),x=r.addInPort(new Port(r,"diffuseRepeatY",OP_PORT_TYPE_VALUE)),m=r.addInPort(new Port(r,"Tex Offset X",OP_PORT_TYPE_VALUE)),v=r.addInPort(new Port(r,"Tex Offset Y",OP_PORT_TYPE_VALUE));h.onChange=n,x.onChange=n,v.onChange=n,m.onChange=n;var O=null,_=null,E=null,C=null;d.define("TEXTURE_REPEAT"),m.set(0),v.set(0),h.set(1),x.set(1)},Ops.Gl.Shader.BasicMaterial.prototype=new CABLES.Op,Ops.Anim.RelativeTime=function(){function e(){o.set(t.patch.freeTimer.get()*r.get())}Op.apply(this,arguments);var t=this;t.name="RelativeTime";var n=t.inFunction("exe"),r=t.inValue("Multiply",1),o=t.outValue("result");n.onTriggered=e,e()},Ops.Anim.RelativeTime.prototype=new CABLES.Op,Ops.Math.Multiply=function(){function e(){var e=n.get(),t=r.get();isNaN(e)&&(e=0),isNaN(t)&&(t=0),o.set(e*t)}Op.apply(this,arguments);var t=this;t.name="Multiply";var n=t.addInPort(new Port(t,"number1")),r=t.addInPort(new Port(t,"number2")),o=t.addOutPort(new Port(t,"result"));n.onValueChanged=e,r.onValueChanged=e,n.set(1),r.set(2)},Ops.Math.Multiply.prototype=new CABLES.Op,Ops.Gl.TextureEffects.ImageCompose=function(){function e(){x&&x["delete"](),m&&m["delete"](),x=new CGL.TextureEffect(h,{isFloatingPointTexture:g.get()}),m=new CGL.Texture(h,{isFloatingPointTexture:g.get(),filter:L,wrap:U,width:Math.floor(s.get()),height:Math.floor(d.get())}),x.setSourceTexture(m),P.set(null),E=!1}function t(){x||e(),l.get()?(v=h.getViewPort()[2],O=h.getViewPort()[3]):(v=Math.floor(s.get()),O=Math.floor(d.get())),v==m.width&&O==m.height||0===v||0===O||(d.set(O),s.set(v),m.filter=CGL.Texture.FILTER_LINEAR,m.setSize(v,O),T.set(v/O),x.setSourceTexture(m)),P.get()&&(P.get().isPowerOfTwo()?a.uiAttribs.hint&&a.uiAttr({hint:null,warning:null}):a.uiAttribs.hint||a.uiAttr({hint:"texture dimensions not power of two! - texture filtering will not work.",warning:null}))}function n(){l.get()?(s.setUiAttribs({hidePort:!0,greyout:!0}),d.setUiAttribs({hidePort:!0,greyout:!0})):(s.setUiAttribs({hidePort:!1,greyout:!1}),d.setUiAttribs({hidePort:!1,greyout:!1}))}function r(){"repeat"==c.get()&&(U=CGL.Texture.WRAP_REPEAT),"mirrored repeat"==c.get()&&(U=CGL.Texture.WRAP_MIRRORED_REPEAT),"clamp to edge"==c.get()&&(U=CGL.Texture.WRAP_CLAMP_TO_EDGE),E=!0,t()}function o(){"nearest"==u.get()&&(L=CGL.Texture.FILTER_NEAREST),"linear"==u.get()&&(L=CGL.Texture.FILTER_LINEAR),E=!0,t()}Op.apply(this,arguments);var a=this,i=a.addInPort(new Port(a,"render",OP_PORT_TYPE_FUNCTION)),l=a.addInPort(new Port(a,"use viewport size",OP_PORT_TYPE_VALUE,{display:"bool"})),s=a.inValueInt("width"),d=a.inValueInt("height"),u=a.inValueSelect("filter",["nearest","linear","mipmap"]),c=a.inValueSelect("wrap",["clamp to edge","repeat","mirrored repeat"]),f=a.inValueSlider("Background Alpha",1),g=a.inValueBool("HDR"),p=a.addOutPort(new Port(a,"trigger",OP_PORT_TYPE_FUNCTION)),P=a.outTexture("texture_out"),T=a.outValue("Aspect Ratio");P.set(null);var h=a.patch.cgl,x=null,m=null,v=8,O=8,_=[0,0,0,0],E=!0,C="".endl()+"precision highp float;".endl()+"uniform float a;".endl()+"void main()".endl()+"{".endl()+"   gl_FragColor = vec4(0.0,0.0,0.0,a);".endl()+"}",w=new CGL.Shader(h,"imgcompose bg");w.setSource(w.getDefaultVertexShader(),C);var L=(new CGL.Uniform(w,"f","a",f),CGL.Texture.FILTER_LINEAR),U=CGL.Texture.WRAP_CLAMP_TO_EDGE;g.onChange=function(){E=!0},l.onValueChanged=function(){n(),l.get()?(s.onValueChanged=null,d.onValueChanged=null):(s.onValueChanged=t,d.onValueChanged=t),t()};var y=function(){(!x||E)&&e();var n=h.getViewPort();_[0]=n[0],_[1]=n[1],_[2]=n[2],_[3]=n[3],h.gl.blendFunc(h.gl.SRC_ALPHA,h.gl.ONE_MINUS_SRC_ALPHA),t(),h.currentTextureEffect=x,x.setSourceTexture(m),x.startEffect(),h.setShader(w),h.currentTextureEffect.bind(),h.gl.activeTexture(h.gl.TEXTURE0),h.gl.bindTexture(h.gl.TEXTURE_2D,h.currentTextureEffect.getCurrentSourceTexture().tex),h.currentTextureEffect.finish(),h.setPreviousShader(),p.trigger(),P.set(x.getCurrentSourceTexture()),x.endEffect(),h.setViewPort(_[0],_[1],_[2],_[3]),h.gl.blendFunc(h.gl.SRC_ALPHA,h.gl.ONE_MINUS_SRC_ALPHA),h.currentTextureEffect=null};c.set("clamp to edge"),c.onValueChanged=r,u.set("linear"),u.onValueChanged=o,l.set(!0),i.onTriggered=y,s.set(640),d.set(360),n()},Ops.Gl.TextureEffects.ImageCompose.prototype=new CABLES.Op,Ops.Gl.TextureEffects.DrawImage=function(){function e(){(1!=x.get()||0!=m.get()||0!=v.get()||0!=O.get())&&(g.hasDefine("TEX_TRANSFORM")||g.define("TEX_TRANSFORM"),_.setValue(parseFloat(x.get())),E.setValue(m.get()),C.setValue(v.get()),w.setValue(O.get()))}function t(){CGL.TextureEffect.checkOpInEffect(n)&&((l.get()&&!L||!l.get()&&L)&&(l.get()&&l.get().tex?(g.define("HAS_TEXTUREALPHA"),L=!0):(g.removeDefine("HAS_TEXTUREALPHA"),L=!1)),a.get()&&a.get().tex&&o.get()>0&&(f.setShader(g),f.currentTextureEffect.bind(),f.gl.activeTexture(f.gl.TEXTURE0),f.gl.bindTexture(f.gl.TEXTURE_2D,f.currentTextureEffect.getCurrentSourceTexture().tex),f.gl.activeTexture(f.gl.TEXTURE1),a.get()&&a.get().tex?f.gl.bindTexture(f.gl.TEXTURE_2D,a.get().tex):f.gl.bindTexture(f.gl.TEXTURE_2D,null),f.gl.activeTexture(f.gl.TEXTURE2),l.get()&&l.get().tex?f.gl.bindTexture(f.gl.TEXTURE_2D,l.get().tex):f.gl.bindTexture(f.gl.TEXTURE_2D,null),f.currentTextureEffect.finish(),f.setPreviousShader()),c.trigger())}Op.apply(this,arguments);var n=this,r=n.addInPort(new Port(n,"render",OP_PORT_TYPE_FUNCTION)),o=n.addInPort(new Port(n,"amount",OP_PORT_TYPE_VALUE,{display:"range"})),a=n.addInPort(new Port(n,"image",OP_PORT_TYPE_TEXTURE,{preview:!0})),i=CGL.TextureEffect.AddBlendSelect(n,"blendMode"),l=n.addInPort(new Port(n,"imageAlpha",OP_PORT_TYPE_TEXTURE,{preview:!0})),s=n.inValueSelect("alphaSrc",["alpha channel","luminance"]),d=n.addInPort(new Port(n,"removeAlphaSrc",OP_PORT_TYPE_VALUE,{display:"bool"})),u=n.addInPort(new Port(n,"invert alpha channel",OP_PORT_TYPE_VALUE,{display:"bool"})),c=n.addOutPort(new Port(n,"trigger",OP_PORT_TYPE_FUNCTION));i.set("normal");var f=n.patch.cgl,g=new CGL.Shader(f,"drawimage");o.set(1);var p="".endl()+"IN vec3 vPosition;".endl()+"IN vec2 attrTexCoord;".endl()+"IN vec3 attrVertNormal;".endl()+"OUT vec2 texCoord;".endl()+"OUT vec3 norm;".endl()+"UNI mat4 projMatrix;".endl()+"UNI mat4 mvMatrix;".endl()+"UNI float posX;".endl()+"UNI float posY;".endl()+"UNI float scale;".endl()+"UNI float rotate;".endl()+"OUT mat3 transform;".endl()+"void main()".endl()+"{".endl()+"   texCoord=attrTexCoord;".endl()+"   norm=attrVertNormal;".endl()+"   #ifdef TEX_TRANSFORM".endl()+"     vec3 coordinates=vec3(attrTexCoord.x, attrTexCoord.y,1.0);".endl()+"     float angle = radians( rotate );".endl()+"     vec2 scale= vec2(scale,scale);".endl()+"     vec2 translate= vec2(posX,posY);".endl()+"     transform = mat3(   scale.x * cos( angle ), scale.x * sin( angle ), 0.0,".endl()+"                           - scale.y * sin( angle ), scale.y * cos( angle ), 0.0,".endl()+"                          - 0.5 * scale.x * cos( angle ) + 0.5 * scale.y * sin( angle ) - 0.5 * translate.x*2.0 + 0.5,  - 0.5 * scale.x * sin( angle ) - 0.5 * scale.y * cos( angle ) - 0.5 * translate.y*2.0 + 0.5, 1.0);".endl()+"   #endif".endl()+"   gl_Position = projMatrix * mvMatrix * vec4(vPosition,  1.0);".endl()+"}",P="".endl()+"#ifdef HAS_TEXTURES".endl()+"  IN vec2 texCoord;".endl()+"  UNI sampler2D tex;".endl()+"  UNI sampler2D image;".endl()+"#endif".endl()+"IN mat3 transform;".endl()+"UNI float rotate;"+CGL.TextureEffect.getBlendCode().endl()+"#ifdef HAS_TEXTUREALPHA".endl()+"   UNI sampler2D imageAlpha;".endl()+"#endif".endl()+"UNI float amount;".endl()+"".endl()+"void main()".endl()+"{".endl()+"   vec4 blendRGBA=vec4(0.0,0.0,0.0,1.0);".endl()+"   #ifdef HAS_TEXTURES".endl()+"       vec2 tc=texCoord;".endl()+"       #ifdef TEX_FLIP_X".endl()+"           tc.x=1.0-tc.x;".endl()+"       #endif".endl()+"       #ifdef TEX_FLIP_Y".endl()+"           tc.y=1.0-tc.y;".endl()+"       #endif".endl()+"       #ifdef TEX_TRANSFORM".endl()+"           vec3 coordinates=vec3(tc.x, tc.y,1.0);".endl()+"           tc=(transform * coordinates ).xy;".endl()+"       #endif".endl()+"       blendRGBA=texture2D(image,tc);".endl()+"       vec3 blend=blendRGBA.rgb;".endl()+"       vec4 baseRGBA=texture2D(tex,texCoord);".endl()+"       vec3 base=baseRGBA.rgb;".endl()+"       vec3 colNew=_blend(base,blend);".endl()+"       #ifdef REMOVE_ALPHA_SRC".endl()+"           blendRGBA.a=1.0;".endl()+"       #endif".endl()+"       #ifdef HAS_TEXTUREALPHA".endl()+"           vec4 colImgAlpha=texture2D(imageAlpha,texCoord);".endl()+"           float colImgAlphaAlpha=colImgAlpha.a;".endl()+"           #ifdef ALPHA_FROM_LUMINANCE".endl()+"               vec3 gray = vec3(dot(vec3(0.2126,0.7152,0.0722), colImgAlpha.rgb ));".endl()+"               colImgAlphaAlpha=(gray.r+gray.g+gray.b)/3.0;".endl()+"           #endif".endl()+"           blendRGBA.a=colImgAlphaAlpha*blendRGBA.a;".endl()+"       #endif".endl()+"   #endif".endl()+"   blendRGBA.rgb=mix( colNew, base ,1.0-blendRGBA.a*amount);".endl()+"   blendRGBA.a=1.0;".endl()+"   gl_FragColor = blendRGBA;".endl()+"}";g.setSource(p,P);new CGL.Uniform(g,"t","tex",0),new CGL.Uniform(g,"t","image",1),new CGL.Uniform(g,"t","imageAlpha",2);u.onValueChanged=function(){u.get()?g.define("INVERT_ALPHA"):g.removeDefine("INVERT_ALPHA")},d.onValueChanged=function(){d.get()?g.define("REMOVE_ALPHA_SRC"):g.removeDefine("REMOVE_ALPHA_SRC")},d.set(!0),s.onValueChanged=function(){"luminance"==s.get()?g.define("ALPHA_FROM_LUMINANCE"):g.removeDefine("ALPHA_FROM_LUMINANCE")},s.set("alpha channel");var T=n.addInPort(new Port(n,"flip x",OP_PORT_TYPE_VALUE,{display:"bool"})),h=n.addInPort(new Port(n,"flip y",OP_PORT_TYPE_VALUE,{display:"bool"}));T.onValueChanged=function(){T.get()?g.define("TEX_FLIP_X"):g.removeDefine("TEX_FLIP_X")},h.onValueChanged=function(){h.get()?g.define("TEX_FLIP_Y"):g.removeDefine("TEX_FLIP_Y")};var x=n.addInPort(new Port(n,"scale",OP_PORT_TYPE_VALUE,{display:"range"})),m=n.addInPort(new Port(n,"pos x",OP_PORT_TYPE_VALUE,{})),v=n.addInPort(new Port(n,"pos y",OP_PORT_TYPE_VALUE,{})),O=n.addInPort(new Port(n,"rotate",OP_PORT_TYPE_VALUE,{}));x.set(1);var _=new CGL.Uniform(g,"f","scale",x.get()),E=new CGL.Uniform(g,"f","posX",m.get()),C=new CGL.Uniform(g,"f","posY",v.get()),w=new CGL.Uniform(g,"f","rotate",O.get());x.onChange=e,m.onChange=e,v.onChange=e,O.onChange=e,i.onValueChanged=function(){CGL.TextureEffect.onChangeBlendSelect(g,i.get())};var L=(new CGL.Uniform(g,"f","amount",o),!1);r.onTriggered=t},Ops.Gl.TextureEffects.DrawImage.prototype=new CABLES.Op,Ops.Gl.TextureEffects.FBMNoise=function(){Op.apply(this,arguments);var e=this,t={};t.fbmnoise_frag="uniform sampler2D tex;\nuniform float anim;\n\nuniform float scale;\nuniform float repeat;\n\nuniform float scrollX;\nuniform float scrollY;\n\nuniform float amount;\n\nuniform bool layer1;\nuniform bool layer2;\nuniform bool layer3;\nuniform bool layer4;\n\n\nIN vec2 texCoord;\n\n\n{{BLENDCODE}}\n\n// adapted from warp shader by inigo quilez/iq\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// See here for a tutorial on how to make this: http://www.iquilezles.org/www/articles/warp/warp.htm\n\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat noise( in vec2 x )\n{\n	return sin(1.5*x.x)*sin(1.5*x.y);\n}\n\nfloat fbm4( vec2 p )\n{\n    float f = 0.0;\n    f += 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); p = m*p*2.01;\n    f += 0.0625*noise( p );\n    return f/0.9375;\n}\n\nfloat fbm6( vec2 p )\n{\n    float f = 0.0;\n    f += 0.500000*(0.5+0.5*noise( p )); p = m*p*2.02;\n    f += 0.250000*(0.5+0.5*noise( p )); p = m*p*2.03;\n    f += 0.125000*(0.5+0.5*noise( p )); p = m*p*2.01;\n    f += 0.062500*(0.5+0.5*noise( p )); p = m*p*2.04;\n    f += 0.031250*(0.5+0.5*noise( p )); p = m*p*2.01;\n    f += 0.015625*(0.5+0.5*noise( p ));\n    return f/0.96875;\n}\n\nvoid main()\n{\n    // vec4 col=texture2D(tex,texCoord+2.0*fbm4(texCoord+2.0*fbm6(texCoord+anim)));\n\n    vec2 p=(texCoord-0.5)*scale;\n    vec2 q = vec2( fbm4( p + vec2(0.3+scrollX,0.20+scrollY) ),\n                   fbm4( p + vec2(3.1+scrollX,1.3+scrollY) ) );\n\n    vec2 q2 = vec2( fbm4( p + vec2(2.0+scrollX,1.0+scrollY) ),\n                   fbm4( p + vec2(3.1+scrollX,1.3+scrollY) ) );\n\n    vec2 q3 = vec2( fbm4( p + vec2(9.0+scrollX,4.0+scrollY) ),\n                   fbm4( p + vec2(3.1+scrollX,4.3+scrollY) ) );\n\n\n\n    float v= fbm4( ( p + 4.0*q +anim*0.1)*repeat);\n    float v2= fbm4( (p + 4.0*q2 +anim*0.1)*repeat );\n    \n    float v3= fbm6( (p + 4.0*q3 +anim*0.1)*repeat );\n    float v4= fbm6( (p + 4.0*q2 +anim*0.1)*repeat );\n\n\n    // vec4 col=vec4( vec3( fbm4(( texCoord + fbm6(texCoord*anim) ) )) ,1.0 );\n    // outColor = vec4(vec3(fbm6(texCoord)),1.0);\n    \n    \n    vec4 base=texture2D(tex,texCoord);\n\n    vec4 finalColor;\n    float colVal=0.0;\n    float numLayers=0.0;\n    \n    if(layer1)\n    {\n        colVal+=v;\n        numLayers++;\n    }\n    \n    if(layer2)\n    {\n        colVal+=v2;\n        numLayers++;\n    }\n    \n    if(layer3)\n    {\n        colVal+=v3;\n        numLayers++;\n    }\n\n    if(layer4)\n    {\n        colVal+=v4;\n        numLayers++;\n    }\n    \n\n    // finalColor=vec4( vec3(v3)*1.0,1.0);\n    // finalColor=vec4( vec3(v3+v2)/2.0,1.0);\n    // finalColor=vec4( vec3(v+v2+v4+v3)/4.0,1.0);\n    \n    finalColor=vec4( vec3(colVal/numLayers),1.0);\n    \n\n    finalColor = vec4( _blend( base.rgb, finalColor.rgb ) ,1.0);\n    finalColor = vec4( mix( finalColor.rgb, base.rgb ,1.0-base.a*amount),1.0);\n\n\n    outColor = finalColor;\n\n\n    // outColor=vec4( v2,v,v4,1.0);\n    // outColor=vec4( vec3(q.x+q.y),1.0);\n    \n    // outColor=texture2D(tex,vec2(v,v2));\n}\n",e.name="FBMNoise";var n=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),r=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal"),o=e.inValueSlider("Amount",1),a=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),i=e.patch.cgl,l=new CGL.Shader(i),s=t.fbmnoise_frag.replace("{{BLENDCODE}}",CGL.TextureEffect.getBlendCode());l.setSource(l.getDefaultVertexShader(),s);new CGL.Uniform(l,"t","tex",0);new CGL.Uniform(l,"f","scale",e.inValue("scale",2)),new CGL.Uniform(l,"f","anim",e.inValue("anim",0)),new CGL.Uniform(l,"f","scrollX",e.inValue("scrollX",9)),new CGL.Uniform(l,"f","scrollY",e.inValue("scrollY",0)),new CGL.Uniform(l,"f","repeat",e.inValue("repeat",1)),new CGL.Uniform(l,"b","layer1",e.inValueBool("Layer 1",!0)),new CGL.Uniform(l,"b","layer2",e.inValueBool("Layer 2",!0)),new CGL.Uniform(l,"b","layer3",e.inValueBool("Layer 3",!0)),new CGL.Uniform(l,"b","layer4",e.inValueBool("Layer 4",!0));new CGL.Uniform(l,"f","amount",o);r.onChange=function(){CGL.TextureEffect.onChangeBlendSelect(l,r.get())},n.onTriggered=function(){CGL.TextureEffect.checkOpInEffect(e)&&(i.setShader(l),i.currentTextureEffect.bind(),i.gl.activeTexture(i.gl.TEXTURE0),i.gl.bindTexture(i.gl.TEXTURE_2D,i.currentTextureEffect.getCurrentSourceTexture().tex),i.currentTextureEffect.finish(),i.setPreviousShader(),a.trigger())}},Ops.Gl.TextureEffects.FBMNoise.prototype=new CABLES.Op,Ops.Gl.TextureEffects.Blur=function(){Op.apply(this,arguments);var e=this,t={};t.blur_frag="IN vec2 texCoord;\nuniform sampler2D tex;\nuniform float dirX;\nuniform float dirY;\nuniform float amount;\n\n#ifdef HAS_MASK\n    uniform sampler2D imageMask;\n#endif\n\nfloat random(vec3 scale, float seed)\n{\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n}\n\nvoid main()\n{\n    vec4 color = vec4(0.0);\n    float total = 0.0;\n\n    float am=amount;\n    #ifdef HAS_MASK\n        am=amount*texture2D(imageMask,texCoord).r;\n        if(am<=0.02)\n        {\n            gl_FragColor=texture2D(tex, texCoord);\n            return;\n        }\n    #endif\n\n   vec2 delta=vec2(dirX*am*0.01,dirY*am*0.01);\n\n\n    \n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n\n    #ifndef FASTBLUR\n    const float range=20.0;\n    #endif\n    #ifdef FASTBLUR\n    const float range=5.0;\n    #endif\n\n    for (float t = -range; t <= range; t++)\n    {\n        float percent = (t + offset - 0.5) / range;\n        float weight = 1.0 - abs(percent);\n        vec4 smpl = texture2D(tex, texCoord + delta * percent);\n        \n        smpl.rgb *= smpl.a;\n\n        color += smpl * weight;\n        total += weight;\n    }\n\n    gl_FragColor = color / total;\n\n    gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n}";
var n=e.patch.cgl;e.name="Blur";var r=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),o=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),a=e.inValueBool("Fast",!0),i=e.addInPort(new Port(e,"amount",OP_PORT_TYPE_VALUE));i.set(10);var l=new CGL.Shader(n);e.onLoaded=l.compile,l.define("FASTBLUR"),a.onChange=function(){a.get()?l.define("FASTBLUR"):l.removeDefine("FASTBLUR")},l.setSource(l.getDefaultVertexShader(),t.blur_frag);var s=(new CGL.Uniform(l,"t","tex",0),new CGL.Uniform(l,"f","dirX",0)),d=new CGL.Uniform(l,"f","dirY",0),u=new CGL.Uniform(l,"f","width",0),c=new CGL.Uniform(l,"f","height",0),f=new CGL.Uniform(l,"f","amount",i.get());i.onValueChange(function(){f.setValue(i.get())});var g=(new CGL.Uniform(l,"t","imageMask",1),e.addInPort(new Port(e,"direction",OP_PORT_TYPE_VALUE,{display:"dropdown",values:["both","vertical","horizontal"]}))),p=0;g.set("both"),g.onValueChange(function(){"both"==g.get()&&(p=0),"horizontal"==g.get()&&(p=1),"vertical"==g.get()&&(p=2)});var P=e.addInPort(new Port(e,"mask",OP_PORT_TYPE_TEXTURE,{preview:!0}));P.onValueChanged=function(){P.get()&&P.get().tex?l.define("HAS_MASK"):l.removeDefine("HAS_MASK")},r.onTriggered=function(){CGL.TextureEffect.checkOpInEffect(e)&&(n.setShader(l),u.setValue(n.currentTextureEffect.getCurrentSourceTexture().width),c.setValue(n.currentTextureEffect.getCurrentSourceTexture().height),(0===p||2==p)&&(n.currentTextureEffect.bind(),n.gl.activeTexture(n.gl.TEXTURE0),n.gl.bindTexture(n.gl.TEXTURE_2D,n.currentTextureEffect.getCurrentSourceTexture().tex),P.get()&&P.get().tex&&(n.gl.activeTexture(n.gl.TEXTURE1),n.gl.bindTexture(n.gl.TEXTURE_2D,P.get().tex)),s.setValue(0),d.setValue(1),n.currentTextureEffect.finish()),(0===p||1==p)&&(n.currentTextureEffect.bind(),n.gl.activeTexture(n.gl.TEXTURE0),n.gl.bindTexture(n.gl.TEXTURE_2D,n.currentTextureEffect.getCurrentSourceTexture().tex),P.get()&&P.get().tex&&(n.gl.activeTexture(n.gl.TEXTURE1),n.gl.bindTexture(n.gl.TEXTURE_2D,P.get().tex)),s.setValue(1),d.setValue(0),n.currentTextureEffect.finish()),n.setPreviousShader(),o.trigger())}},Ops.Gl.TextureEffects.Blur.prototype=new CABLES.Op,Ops.Gl.Performance=function(){function e(){d.style.opacity=1,f=!f,r(),E||n(),f?(E.style.display="block",d.style.left=v+"px",d.style["min-height"]="56px"):(E.style.display="none",d.style.left="0px",d.style["min-height"]="auto")}function t(){u.fillStyle="#222222",u.fillRect(0,0,E.width,E.height),u.fillStyle="#555555";var e=0;for(e=v;e>=0;e--)x[e]>30&&(u.fillStyle="#ff5555"),u.fillRect(v-e,E.height-2.5*x[e],1,2.5*x[e]),x[e]>30&&(u.fillStyle="#555555");for(u.fillStyle="#aaaaaa",e=v;e>=0;e--)m[e]>30&&(u.fillStyle="#ff00ff"),u.fillRect(v-e,E.height-2.5*m[e],1,2.5*m[e]),m[e]>30&&(u.fillStyle="#aaaaaa")}function n(){E=document.createElement("canvas"),E.id="performance_"+o.patch.config.glCanvasId,E.width=v,E.height="128",E.style.display="block",E.style.opacity=.9,E.style.position="absolute",E.style.left="0px",E.style.cursor="pointer",E.style.top="-64px",E.style["z-index"]="9998",L.appendChild(E),u=E.getContext("2d"),E.addEventListener("click",e)}function r(){var e="";if(CGL.profileShaderCompiles>0&&(e+="Shader compile ("+CGL.profileShaderCompileName+") "),CGL.profileShaderGetUniform>0&&(e+="Shader get uni loc! ("+CGL.profileShaderGetUniformName+")"),CGL.profileTextureResize>0&&(e+="Texture resize! "),CGL.profileFrameBuffercreate>0&&(e+="Framebuffer create! "),CGL.profileEffectBuffercreate>0&&(e+="Effectbuffer create! "),CGL.profileTextureDelete>0&&(e+="Texture delete! "),CGL.profileNonTypedAttrib>0&&(e+="Not-Typed Buffer Attrib! "+CGL.profileNonTypedAttribNames),e.length>0&&(e='| <span style="color:#f80;">WARNING: '+e+"<span>"),d.innerHTML=p+" fps | "+Math.round(100*T)/100+"ms "+e,f){var t=0;O=0,h=0;for(var n=x.length;n>x.length-x.length/3;n--)x[n]>-1&&(O+=x[n],t++),m[n]>-1&&(h+=m[n]);O/=t,h/=t,d.innerHTML+="<br/> "+c.canvasWidth+" x "+c.canvasHeight,d.innerHTML+="<br/>frame avg: "+Math.round(100*h)/100+" ms ("+Math.round(h/O*100)+"%) / "+Math.round(100*O)/100+" ms",d.innerHTML+=" (self: "+Math.round(100*_)/100+" ms) ",d.innerHTML+="<br/>shader binds: "+Math.ceil(CGL.profileShaderBinds/p)+" uniforms: "+Math.ceil(CGL.profileUniformCount/p)+" mesh.setGeom: "+CGL.profileMeshSetGeom+" videos: "+CGL.profileVideosPlaying}CGL.profileUniformCount=0,CGL.profileShaderGetUniform=0,CGL.profileShaderCompiles=0,CGL.profileShaderBinds=0,CGL.profileTextureResize=0,CGL.profileFrameBuffercreate=0,CGL.profileEffectBuffercreate=0,CGL.profileTextureDelete=0,CGL.profileMeshSetGeom=0,CGL.profileVideosPlaying=0,CGL.profileNonTypedAttrib=0,CGL.profileNonTypedAttribNames=""}Op.apply(this,arguments);var o=this;o.name="Performance";for(var a=this.addInPort(new Port(this,"exe",OP_PORT_TYPE_FUNCTION)),i=this.addOutPort(new Port(this,"childs",OP_PORT_TYPE_FUNCTION)),l=o.inValueBool("Visible",!0),s=o.outValue("FPS"),d=document.createElement("div"),u=null,c=o.patch.cgl,f=!1,g=0,p=0,P=0,T=0,h=0,x=[],m=[],v=128,O=0,_=0,E=null,C=0,w=0;v>w;w++)x[w]=-1,m[w]=-1;d.id="performance",d.style.position="absolute",d.style.left="0px",d.style.top="0px",d.style.opacity="0.9",d.style.padding="4px",d.style.cursor="pointer",d.style.background="#222",d.style["font-family"]="monospace",d.style["font-size"]="11px",d.style["z-index"]="9999",d.innerHTML="&nbsp;";var L=o.patch.cgl.canvas.parentElement;L.appendChild(d),d.addEventListener("click",e),o.onDelete=function(){d.remove()},l.onChange=function(){l.get()?d.style.opacity=1:d.style.opacity=0},a.onTriggered=function(){var e=performance.now();if(g++,0===P&&(P=Date.now()),Date.now()-P>=1e3&&(p=g,g=0,frames=0,s.set(p),r(),P=Date.now()),f){var n=performance.now()-C;x.push(n),x.shift(),m.push(T),m.shift(),t()}C=performance.now(),_=performance.now()-e;var o=performance.now();i.trigger(),T=performance.now()-o},o.onDelete=function(){E&&E.remove(),d&&d.remove()}},Ops.Gl.Performance.prototype=new CABLES.Op,Ops.Math.Divide=function(){Op.apply(this,arguments);var e=this,t=e.addInPort(new Port(e,"number1")),n=e.addInPort(new Port(e,"number2")),r=e.addOutPort(new Port(e,"result")),o=function(){r.set(t.get()/n.get())};t.set(1),n.set(1),t.onValueChanged=o,n.onValueChanged=o,o()},Ops.Math.Divide.prototype=new CABLES.Op,Ops.Vars.SetVariable=function(){function e(){if(CABLES.UI){var e=[],t=r.patch.getVars();for(var n in t)e.push(n);e.push("+ create new one"),r.varName.uiAttribs.values=e}}function t(){if(CABLES.UI){if("+ create new one"==r.varName.get())return void CABLES.CMD.PATCH.createVariable(r);r.setTitle("#"+r.varName.get())}n()}function n(){r.patch.setVarValue(r.varName.get(),o.get())}Op.apply(this,arguments);var r=this,o=r.inValue("Value");r.varName=r.inValueSelect("Variable"),r.varName.onChange=t,o.onChange=n,o.changeAlways=!0,r.patch.addVariableListener(e),e()},Ops.Vars.SetVariable.prototype=new CABLES.Op,Ops.Vars.Variable=function(){function e(){if(CABLES.UI){var e=[],t=r.patch.getVars();for(var n in t)e.push(n);e.push("+ create new one"),r.varName.uiAttribs.values=e}}function t(){return e(),CABLES.UI&&"+ create new one"==r.varName.get()?void CABLES.CMD.PATCH.createVariable(r):(a&&a.removeListener(n),a=r.patch.getVar(r.varName.get()),void(a?(a.addListener(n),r.uiAttr({error:null}),r.setTitle("#"+r.varName.get()),n(a.getValue())):(r.uiAttr({error:"unknown variable! - there is no setVariable with this name"}),r.setTitle("#invalid"))))}function n(t){e(),o.set(t)}Op.apply(this,arguments);var r=this;r.name="Variable",r.varName=r.inValueSelect("Variable");var o=r.outValue("Value"),a=null;r.patch.addVariableListener(t),t(),e(),r.varName.onChange=function(){t()},r.onDelete=function(){a&&a.removeListener(n)}},Ops.Vars.Variable.prototype=new CABLES.Op,Ops.Gl.CanvasSize=function(){function e(){r.set(a.canvasHeight),n.set(a.canvasWidth),o.set(window.devicePixelRatio)}Op.apply(this,arguments);var t=this,n=t.addOutPort(new Port(t,"width",OP_PORT_TYPE_VALUE)),r=t.addOutPort(new Port(t,"height",OP_PORT_TYPE_VALUE)),o=t.outValue("Pixel Ratio"),a=t.patch.cgl;a.addEventListener("resize",e),e()},Ops.Gl.CanvasSize.prototype=new CABLES.Op,Ops.Math.Round=function(){function e(){var e=Math.pow(10,o.get());n.set(Math.round(r.get()*e)/e)}Op.apply(this,arguments);var t=this,n=t.addOutPort(new Port(t,"result")),r=t.addInPort(new Port(t,"number")),o=t.addInPort(new Port(t,"Decimal Places"));o.set(0),r.onValueChanged=e,o.onValueChanged=e},Ops.Math.Round.prototype=new CABLES.Op,Ops.Json.ObjectIterate=function(){Op.apply(this,arguments);var e=this,t=e.inObject("Object"),n=e.outValue("Key");t.onChange=function(){var e=t.get();if(e)for(var r in e)n.set(r)}},Ops.Json.ObjectIterate.prototype=new CABLES.Op,Ops.Vars.VariableObject=function(){function e(){if(CABLES.UI){var e=[],t=r.patch.getVars();for(var n in t)e.push(n);e.push("+ create new one"),r.varName.uiAttribs.values=e}}function t(){return e(),CABLES.UI&&"+ create new one"==r.varName.get()?void CABLES.CMD.PATCH.createVariable(r):(a&&a.removeListener(n),a=r.patch.getVar(r.varName.get()),void(a?(a.addListener(n),r.uiAttr({error:null}),r.setTitle("#"+r.varName.get()),n(a.getValue())):(r.uiAttr({error:"unknown variable! - there is no setVariable with this name"}),r.setTitle("#invalid"))))}function n(t){e(),o.set(t)}Op.apply(this,arguments);var r=this;r.varName=r.inValueSelect("Variable");var o=r.outObject("Object"),a=null;r.patch.addVariableListener(t),t(),e(),r.varName.onChange=function(){t()},r.onDelete=function(){a&&a.removeListener(n)}},Ops.Vars.VariableObject.prototype=new CABLES.Op,Ops.Vars.SetVariableObject=function(){function e(){if(CABLES.UI){var e=[],t=r.patch.getVars();for(var n in t)e.push(n);e.push("+ create new one"),r.varName.uiAttribs.values=e}}function t(){if(CABLES.UI){if("+ create new one"==r.varName.get())return void CABLES.CMD.PATCH.createVariable(r);r.setTitle("#"+r.varName.get())}n()}function n(){r.patch.setVarValue(r.varName.get(),o.get())}Op.apply(this,arguments);var r=this,o=r.inObject("Object");r.varName=r.inValueSelect("Variable"),r.varName.onChange=t,o.onChange=n,r.patch.addVariableListener(e),e()},Ops.Vars.SetVariableObject.prototype=new CABLES.Op,Ops.Json.ObjectGetValue=function(){function e(){n.get()&&n.get().hasOwnProperty(r.get())?o.set(n.get()[r.get()]):o.set(null)}Op.apply(this,arguments);var t=this;t.name="getValue";var n=t.addInPort(new Port(t,"data",OP_PORT_TYPE_OBJECT)),r=t.inValueString("key"),o=t.addOutPort(new Port(t,"result"));o.ignoreValueSerialize=!0,n.ignoreValueSerialize=!0,r.onChange=e,n.onChange=e},Ops.Json.ObjectGetValue.prototype=new CABLES.Op,Ops.Json.ObjectGetObject=function(){function e(){n.get()&&n.get().hasOwnProperty(r.get())?o.set(n.get()[r.get()]):o.set(null)}Op.apply(this,arguments);var t=this,n=t.addInPort(new Port(t,"data",OP_PORT_TYPE_OBJECT)),r=t.inValueString("key"),o=t.outObject("Result");o.ignoreValueSerialize=!0,n.ignoreValueSerialize=!0,n.onChange=r.onChange=e},Ops.Json.ObjectGetObject.prototype=new CABLES.Op,Ops.Trigger.Repeat=function(){Op.apply(this,arguments);var e=this;e.name="Repeat";var t=e.addInPort(new Port(e,"exe",OP_PORT_TYPE_FUNCTION)),n=e.inValueInt("num"),r=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),o=e.addOutPort(new Port(e,"index"));n.set(5),t.onTriggered=function(){for(var e=Math.round(n.get())-1;e>-1;e--)o.set(e),r.trigger()}},Ops.Trigger.Repeat.prototype=new CABLES.Op,Ops.Gl.TextureEffects.Color=function(){Op.apply(this,arguments);var e=this,t={};t.color_frag="    \nIN vec2 texCoord;\nUNI sampler2D tex;\nUNI float r;\nUNI float g;\nUNI float b;\nUNI float amount;\n\n{{BLENDCODE}}\n\nvoid main()\n{\n   vec4 col=vec4(r,g,b,1.0);\n   vec4 base=texture2D(tex,texCoord);\n\n   col=vec4( _blend(base.rgb,col.rgb) ,1.0);\n   col=vec4( mix( col.rgb, base.rgb ,1.0-base.a*amount),1.0);\n   gl_FragColor = col;\n}\n";var n=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),r=e.addInPort(new Port(e,"r",OP_PORT_TYPE_VALUE,{display:"range",colorPick:"true"})),o=e.addInPort(new Port(e,"g",OP_PORT_TYPE_VALUE,{display:"range"})),a=e.addInPort(new Port(e,"b",OP_PORT_TYPE_VALUE,{display:"range"})),i=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal"),l=e.inValueSlider("Amount",1),s=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),d=e.patch.cgl,u=new CGL.Shader(d,"textureeffect color");e.onLoaded=u.compile;var c=t.color_frag;c=c.replace("{{BLENDCODE}}",CGL.TextureEffect.getBlendCode()),u.setSource(u.getDefaultVertexShader(),c);new CGL.Uniform(u,"t","tex",0);r.set(1),o.set(1),a.set(1);new CGL.Uniform(u,"f","r",r),new CGL.Uniform(u,"f","g",o),new CGL.Uniform(u,"f","b",a),new CGL.Uniform(u,"f","amount",l);i.onChange=function(){CGL.TextureEffect.onChangeBlendSelect(u,i.get())},n.onTriggered=function(){CGL.TextureEffect.checkOpInEffect(e)&&(d.setShader(u),d.currentTextureEffect.bind(),d.gl.activeTexture(d.gl.TEXTURE0),d.gl.bindTexture(d.gl.TEXTURE_2D,d.currentTextureEffect.getCurrentSourceTexture().tex),d.currentTextureEffect.finish(),d.setPreviousShader(),s.trigger())}},Ops.Gl.TextureEffects.Color.prototype=new CABLES.Op,Ops.Sequence=function(){Op.apply(this,arguments);var e=this,t=e.addInPort(new Port(e,"exe",OP_PORT_TYPE_FUNCTION)),n=[],r=[],o=function(){for(var e=0;e<r.length;e++)r[e].trigger()};t.onTriggered=o;for(var a=16,i=0;a>i;i++)if(r.push(e.addOutPort(new Port(e,"trigger "+i,OP_PORT_TYPE_FUNCTION))),a-1>i){var l=e.addInPort(new Port(e,"exe "+i,OP_PORT_TYPE_FUNCTION));l.onTriggered=o,n.push(l)}},Ops.Sequence.prototype=new CABLES.Op,Ops.Gl.Meshes.FullscreenRectangle=function(){function e(){var e=s.getViewPort();if(e[2]!=c||e[3]!=f){var t=0,n=0;c=e[2],f=e[3],u.vertices=new Float32Array([t+c,n+f,0,t,n+f,0,t+c,n,0,t,n,0]),a.get()?u.setTexCoords(new Float32Array([1,0,0,0,1,1,0,1])):u.setTexCoords(new Float32Array([1,1,0,1,1,0,0,0])),u.verticesIndices=new Float32Array([0,1,2,3,1,2]),d?d.setGeom(u):d=new CGL.Mesh(s,u)}}Op.apply(this,arguments);var t=this,n={};n.shader_frag="\nUNI sampler2D tex;\nIN vec2 texCoord;\n\nprecision highp float;\n\nvoid main()\n{\n   gl_FragColor = texture2D(tex,vec2(texCoord.x,(1.0-texCoord.y)));\n}\n",n.shader_vert="{{MODULES_HEAD}}\n\nIN vec3 vPosition;\nUNI mat4 projMatrix;\nUNI mat4 mvMatrix;\n\nOUT vec2 texCoord;\nIN vec2 attrTexCoord;\n\nvoid main()\n{\n   vec4 pos=vec4(vPosition,  1.0);\n\n   texCoord=attrTexCoord;\n\n\n   gl_Position = projMatrix * mvMatrix * pos;\n}\n";var r=t.addInPort(new Port(t,"render",OP_PORT_TYPE_FUNCTION)),o=t.addInPort(new Port(t,"Center in Canvas",OP_PORT_TYPE_VALUE,{display:"bool"})),a=t.inValueBool("Flip Y"),i=t.inTexture("Texture"),l=t.addOutPort(new Port(t,"trigger",OP_PORT_TYPE_FUNCTION)),s=t.patch.cgl,d=null,u=new CGL.Geometry("fullscreen rectangle"),c=0,f=0;o.onChange=e,a.onChange=e;var g=null;i.onChange=function(){var e=i.get();e&&!g&&(g=new CGL.Shader(s,"fullscreenrectangle"),g.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]),g.setSource(n.shader_vert,n.shader_frag),g.fullscreenRectUniform=new CGL.Uniform(g,"t","tex",0))},r.onTriggered=function(){if((s.getViewPort()[2]!=c||s.getViewPort()[3]!=f)&&e(),s.pushPMatrix(),mat4.identity(s.pMatrix),mat4.ortho(s.pMatrix,0,c,f,0,-10,1e3),s.pushModelMatrix(),mat4.identity(s.mvMatrix),s.pushViewMatrix(),mat4.identity(s.vMatrix),o.get()){var t=0,n=0;c<s.canvasWidth&&(t=(s.canvasWidth-c)/2),f<s.canvasHeight&&(n=(s.canvasHeight-f)/2),s.setViewPort(t,n,c,f)}g?(i.get()&&(s.gl.activeTexture(s.gl.TEXTURE0),s.gl.bindTexture(s.gl.TEXTURE_2D,i.get().tex)),d.render(g)):d.render(s.getShader()),s.gl.clear(s.gl.DEPTH_BUFFER_BIT),s.popPMatrix(),s.popModelMatrix(),s.popViewMatrix(),l.trigger()}},Ops.Gl.Meshes.FullscreenRectangle.prototype=new CABLES.Op,Ops.Gl.TextureEffects.ChromaticAberration=function(){Op.apply(this,arguments);var e=this,t={};t.chromatic_frag="\nIN vec2 texCoord;\nUNI sampler2D tex;\nUNI float pixel;\nUNI float onePixel;\nUNI float amount;\nUNI float lensDistort;\n\n#ifdef MASK\nUNI sampler2D texMask;\n#endif\n\nvoid main()\n{\n\n   vec4 col=texture2D(tex,texCoord);\n\n   vec2 tc=texCoord;;\n   float pix = pixel;\n   if(lensDistort>0.0)\n   {\n       float dist = distance(texCoord, vec2(0.5,0.5));\n       tc-=0.5;\n       tc *=smoothstep(-0.9,1.0*lensDistort,1.0-dist);\n       tc+=0.5;\n   }\n\n    #ifdef MASK\n        vec4 m=texture2D(texMask,texCoord);\n        pix*=m.r*m.a;\n    #endif\n\n    #ifdef SMOOTH\n        float samples=round(pix/onePixel/4.0+1.0);\n        col.r=0.0;\n        col.b=0.0;\n        // float b=0.0;\n        for(float off=0.0;off<samples;off++)\n        {\n            float diff=(pix/samples)*off;\n            col.r+=texture2D(tex,vec2(tc.x+diff,tc.y)).r/samples;\n            col.b+=texture2D(tex,vec2(tc.x-diff,tc.y)).b/samples;\n        }\n    #endif\n\n    #ifndef SMOOTH\n        col.r=texture2D(tex,vec2(tc.x+pix,tc.y)).r;\n        col.b=texture2D(tex,vec2(tc.x-pix,tc.y)).b;\n    #endif\n\n   outColor = col;\n\n}\n",e.name="ChromaticAberration";var n=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),r=e.inValue("Pixel",5),o=e.inValueSlider("Lens Distort",0),a=e.inTexture("Mask"),i=e.inValueBool("Smooth",!1),l=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),s=e.patch.cgl,d=new CGL.Shader(s);i.onChange=function(){i.get()?d.define("SMOOTH"):d.removeDefine("SMOOTH")},a.onChange=function(){a.get()?d.define("MASK"):d.removeDefine("MASK")},d.setSource(d.getDefaultVertexShader(),t.chromatic_frag);var u=(new CGL.Uniform(d,"t","tex",0),new CGL.Uniform(d,"f","pixel",0)),c=new CGL.Uniform(d,"f","onePixel",0);new CGL.Uniform(d,"t","texMask",1),new CGL.Uniform(d,"f","lensDistort",o);n.onTriggered=function(){if(s.currentTextureEffect){var e=s.currentTextureEffect.getCurrentSourceTexture();u.setValue(r.get()*(1/e.width)),c.setValue(1/e.width),s.setShader(d),s.currentTextureEffect.bind(),s.gl.activeTexture(s.gl.TEXTURE0),s.gl.bindTexture(s.gl.TEXTURE_2D,e.tex),a.get()&&(s.gl.activeTexture(s.gl.TEXTURE1),s.gl.bindTexture(s.gl.TEXTURE_2D,a.get().tex)),s.currentTextureEffect.finish(),s.setPreviousShader(),l.trigger()}}},Ops.Gl.TextureEffects.ChromaticAberration.prototype=new CABLES.Op,Ops.Gl.TextureEffects.PixelDisplacement=function(){Op.apply(this,arguments);var e=this,t={};t.pixeldisplace_frag="\n#ifdef HAS_TEXTURES\n    IN vec2 texCoord;\n    uniform sampler2D tex;\n    uniform sampler2D displaceTex;\n#endif\nuniform float amountX;\nuniform float amountY;\n\nvoid main()\n{\n    vec4 col=vec4(1.0,0.0,0.0,1.0);\n    #ifdef HAS_TEXTURES\n        float mulX=1.0;\n        float mulY=1.0;\n        float x=mod(texCoord.x+mulX*(texture2D(displaceTex,texCoord).g-0.5)*2.0*amountX,1.0);\n        float y=mod(texCoord.y+mulY*(texture2D(displaceTex,texCoord).g-0.5)*2.0*amountY,1.0);\n\n\n        col=texture2D(tex,vec2(x,y) );\n//        col.rgb=desaturate(col.rgb,amount);\n   #endif\n   gl_FragColor = col;\n}",e.name="PixelDisplacement";var n=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),r=e.addInPort(new Port(e,"amountX",OP_PORT_TYPE_VALUE,{display:"range"})),o=e.addInPort(new Port(e,"amountY",OP_PORT_TYPE_VALUE,{display:"range"})),a=e.inTexture("displaceTex"),i=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),l=e.patch.cgl,s=new CGL.Shader(l);s.setSource(s.getDefaultVertexShader(),t.pixeldisplace_frag);new CGL.Uniform(s,"t","tex",0),new CGL.Uniform(s,"t","displaceTex",1),new CGL.Uniform(s,"f","amountX",r),new CGL.Uniform(s,"f","amountY",o);n.onTriggered=function(){l.currentTextureEffect&&(l.setShader(s),l.currentTextureEffect.bind(),l.gl.activeTexture(l.gl.TEXTURE0),l.gl.bindTexture(l.gl.TEXTURE_2D,l.currentTextureEffect.getCurrentSourceTexture().tex),a.get()&&(l.gl.activeTexture(l.gl.TEXTURE1),l.gl.bindTexture(l.gl.TEXTURE_2D,a.get().tex)),l.currentTextureEffect.finish(),l.setPreviousShader(),i.trigger())}},Ops.Gl.TextureEffects.PixelDisplacement.prototype=new CABLES.Op,Ops.Gl.TextureEffects.TextureDifference=function(){Op.apply(this,arguments);var e=this,t={};t.tex_difference_frag="\nIN vec2 texCoord;\nUNI sampler2D tex;\nUNI sampler2D tex1;\nUNI sampler2D tex2;\n\nvoid main()\n{\n\n   vec4 col=texture2D(tex,texCoord);\n   \n   vec4 col1=texture2D(tex1,texCoord);\n   vec4 col2=texture2D(tex2,texCoord);\n\n\n   outColor = col1-col2;\n   outColor.a=1.0;\n\n}\n";var n=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),r=e.inTexture("Texture 1"),o=e.inTexture("Texture 2"),a=e.outFunction("Next"),i=e.patch.cgl,l=new CGL.Shader(i);l.setSource(l.getDefaultVertexShader(),t.tex_difference_frag);new CGL.Uniform(l,"t","tex",0),new CGL.Uniform(l,"t","tex1",1),new CGL.Uniform(l,"t","tex2",2);n.onTriggered=function(){if(i.currentTextureEffect){if(r.get()&&o.get()){var e=i.currentTextureEffect.getCurrentSourceTexture();i.setShader(l),i.currentTextureEffect.bind(),i.gl.activeTexture(i.gl.TEXTURE0),i.gl.bindTexture(i.gl.TEXTURE_2D,e.tex),i.gl.activeTexture(i.gl.TEXTURE1),i.gl.bindTexture(i.gl.TEXTURE_2D,r.get().tex),i.gl.activeTexture(i.gl.TEXTURE2),i.gl.bindTexture(i.gl.TEXTURE_2D,o.get().tex),i.currentTextureEffect.finish(),i.setPreviousShader()}a.trigger()}}},Ops.Gl.TextureEffects.TextureDifference.prototype=new CABLES.Op,Ops.Gl.TextureEffects.Desaturate=function(){Op.apply(this,arguments);var e=this,t={};t.desaturate_frag="\n#ifdef HAS_TEXTURES\n  IN vec2 texCoord;\n  UNI sampler2D tex;\n#endif\nuniform float amount;\n\nvec3 desaturate(vec3 color, float amount)\n{\n   vec3 gray = vec3(dot(vec3(0.2126,0.7152,0.0722), color));\n   return vec3(mix(color, gray, amount));\n}\n\nvoid main()\n{\n   vec4 col=vec4(1.0,0.0,0.0,1.0);\n   #ifdef HAS_TEXTURES\n       col=texture2D(tex,texCoord);\n       col.rgb=desaturate(col.rgb,amount);\n   #endif\n   gl_FragColor = col;\n}",e.name="Desaturate";var n=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),r=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),o=e.inValueSlider("amount",1),a=e.patch.cgl,i=new CGL.Shader(a);i.setSource(i.getDefaultVertexShader(),t.desaturate_frag);new CGL.Uniform(i,"t","tex",0),new CGL.Uniform(i,"f","amount",o);n.onTriggered=function(){a.currentTextureEffect&&(a.setShader(i),a.currentTextureEffect.bind(),a.gl.activeTexture(a.gl.TEXTURE0),a.gl.bindTexture(a.gl.TEXTURE_2D,a.currentTextureEffect.getCurrentSourceTexture().tex),a.currentTextureEffect.finish(),a.setPreviousShader(),r.trigger())}},Ops.Gl.TextureEffects.Desaturate.prototype=new CABLES.Op,Ops.Devices.Mouse.MouseWheel=function(){function e(){var e=O.getValue(CABLES.now()/1e3-_);x.set(e)}function t(){u.get()||(E=Math.min(c.get(),E)),s.get()||(E=Math.max(d.get(),E))}function n(e){var n=CGL.getWheelSpeed(e)*w*l.get();L&&(n*=4),m.set(0),m.set(n),E-=n,t(),f.get()?(O.clear(),O.setValue(CABLES.now()/1e3-_,x.get()),O.setValue(CABLES.now()/1e3-_+g.get(),E)):x.set(E),p.get()&&e.preventDefault()}function r(){v.canvas.addEventListener("wheel",n)}function o(){v.canvas.removeEventListener("wheel",n)}Op.apply(this,arguments);var a=this;a.name="mousewheel";var i=a.inValue("Value",0),l=a.inValue("Multiply",1),s=a.inValueBool("Min Unlimited",!1);s.setUiAttribs({hidePort:!0});var d=a.inValue("min",-100),u=a.inValueBool("Max Unlimited",!1);u.setUiAttribs({hidePort:!0});var c=a.inValue("max",100),f=a.inValueBool("smooth"),g=a.inValue("delay",.3),p=a.inValueBool("prevent scroll"),P=a.inValueBool("Flip Direction"),T=a.inValueBool("active",!0),h=a.inFunctionButton("Reset"),x=a.outValue("absolute value",0),m=a.outValue("delta",0),v=a.patch.cgl,O=new CABLES.TL.Anim;O.defaultEasing=CABLES.TL.EASING_EXPO_OUT;var _=CABLES.now()/1e3,E=0,C=0;O.clear(),O.setValue(CABLES.now()/1e3-_,x.get());var w=1,L=-1!=navigator.appVersion.indexOf("Win");r(),d.onChange=function(){t(),x.set(E)},c.onChange=function(){t(),x.set(E)},s.onChange=function(){var e=s.get();d.setUiAttribs({hidePort:e,greyout:e})},u.onChange=function(){var e=u.get();c.setUiAttribs({hidePort:e,greyout:e})},h.onTriggered=function(){O.clear(),O.setValue(CABLES.now()/1e3-_,i.get()),x.set(i.get()),E=0},i.onChange=function(){E=i.get(),t(),x.set(E),O.clear(),O.setValue(CABLES.now()/1e3-_,x.get())},f.onChange=function(){f.get()?C=setInterval(e,15):clearTimeout(C)},P.onChange=function(){w=P.get()?-1:1};T.onChange=function(){o(),T.get()&&r()}},Ops.Devices.Mouse.MouseWheel.prototype=new CABLES.Op,Ops.Math.Compare.Greater=function(){function e(){n.set(r.get()>o.get())}Op.apply(this,arguments);var t=this;t.name="Greater";var n=t.addOutPort(new Port(t,"result")),r=t.addInPort(new Port(t,"number1")),o=t.addInPort(new Port(t,"number2"));r.onValueChanged=e,o.onValueChanged=e},Ops.Math.Compare.Greater.prototype=new CABLES.Op,Ops.Anim.BoolAnim=function(){function e(){d.set(!1);var e=(CABLES.now()-f)/1e3,t=c.getValue(e);c.clear(),c.setValue(e,t),r.get()?c.setValue(e+i.get(),a.get()):c.setValue(e+i.get(),o.get())}Op.apply(this,arguments);var t=this,n=t.addInPort(new Port(t,"exe",OP_PORT_TYPE_FUNCTION)),r=t.addInPort(new Port(t,"bool",OP_PORT_TYPE_VALUE,{display:"bool"})),o=t.addInPort(new Port(t,"value false",OP_PORT_TYPE_VALUE)),a=t.addInPort(new Port(t,"value true",OP_PORT_TYPE_VALUE)),i=t.addInPort(new Port(t,"duration",OP_PORT_TYPE_VALUE)),l=t.addOutPort(new Port(t,"trigger",OP_PORT_TYPE_FUNCTION)),s=t.addOutPort(new Port(t,"value",OP_PORT_TYPE_VALUE)),d=t.addOutPort(new Port(t,"finished",OP_PORT_TYPE_VALUE)),u=t.outFunction("Finished Trigger");o.set(0),a.set(1),i.set(.3);var c=new CABLES.TL.Anim;c.createPort(t,"easing");var f=CABLES.now();r.onValueChanged=e,o.onValueChanged=e,a.onValueChanged=e,i.onValueChanged=e,n.onTriggered=function(){var e=(CABLES.now()-f)/1e3;s.set(c.getValue(e)),c.hasEnded(e)&&(d.get()||u.trigger(),d.set(!0)),l.trigger()},e()},Ops.Anim.BoolAnim.prototype=new CABLES.Op,Ops.Gl.Textures.Text=function(){function e(){p.get().setSize(i.get(),l.get()),m.canvas.width=h.width=i.get(),m.canvas.height=h.height=l.get(),t()}function t(){m.clearRect(0,0,h.width,h.height),m.fillStyle="white";var e=parseFloat(o.get()),t=u.get();t.indexOf(" ")>-1&&(t='"'+t+'"'),m.font=e+"px "+t,m.textAlign=s.get(),f.get()>0&&(m.beginPath(),m.lineWidth=""+f.get(),m.strokeStyle="white",m.rect(0,0,i.get(),l.get()),m.stroke());var n=(r.get()+"").replace(/<br\/>/g,"\n");"0"==n&&(n=" ");var g=n.split("\n"),x=0,v=0;if(a.get()){e=i.get();var O=0,_=0,E=0;do{if(O++,O>300)break;for(e-=10,m.font=e+'px "'+u.get()+'"',_=0,E=g.length*e*1.1,v=0;v<g.length;v++)_=Math.max(_,m.measureText(g[v]).width)}while(_>m.canvas.width||E>m.canvas.height)}if("center"==d.get()){var C=(g.length-1.5)*e+parseFloat(c.get());x=m.canvas.height/2-C/2}else"top"==d.get()?x=e:"bottom"==d.get()&&(x=m.canvas.height-g.length*(parseFloat(o.get())+parseFloat(c.get())));for(v=0;v<g.length;v++)"center"==s.get()&&m.fillText(g[v],m.canvas.width/2,x),"left"==s.get()&&m.fillText(g[v],0,x),"right"==s.get()&&m.fillText(g[v],m.canvas.width,x),x+=e+parseFloat(c.get());m.restore(),P.set(m.canvas.height/m.canvas.width),p.get()?p.get().initTexture(h,CGL.Texture.FILTER_MIPMAP):p.set(new CGL.Texture.createFromImage(T,h,{filter:CGL.Texture.FILTER_MIPMAP})),p.get().unpackAlpha=!1}Op.apply(this,arguments);var n=this;n.name="TextureText";var r=n.addInPort(new Port(n,"text",OP_PORT_TYPE_VALUE,{type:"string",display:"editor"})),o=n.addInPort(new Port(n,"fontSize")),a=n.addInPort(new Port(n,"Maximize Size",OP_PORT_TYPE_VALUE,{display:"bool"})),i=n.addInPort(new Port(n,"texture width")),l=n.addInPort(new Port(n,"texture height")),s=n.addInPort(new Port(n,"align",OP_PORT_TYPE_VALUE,{display:"dropdown",values:["left","center","right"]})),d=n.addInPort(new Port(n,"vertical align",OP_PORT_TYPE_VALUE,{display:"dropdown",values:["top","center","bottom"]})),u=n.addInPort(new Port(n,"font",OP_PORT_TYPE_VALUE,{type:"string"})),c=n.addInPort(new Port(n,"line distance")),f=n.addInPort(new Port(n,"border")),g=n.inFunctionButton("Refresh"),p=n.outTexture("texture"),P=n.addOutPort(new Port(n,"Ratio",OP_PORT_TYPE_VALUE)),T=n.patch.cgl;g.onTriggered=t,f.set(0),i.set(512),l.set(512),c.set(1),o.set(30),u.set("Arial"),s.set("center"),d.set("center");var h=document.createElement("canvas");h.id="texturetext_"+CABLES.generateUUID(),h.style.display="none";var x=document.getElementsByTagName("body")[0];x.appendChild(h);var m=h.getContext("2d");s.onValueChanged=t,d.onValueChanged=t,r.onValueChanged=t,o.onValueChanged=t,u.onValueChanged=t,c.onValueChanged=t,a.onValueChanged=t,i.onValueChanged=e,l.onValueChanged=e,f.onValueChanged=t,r.set("cables"),e()},Ops.Gl.Textures.Text.prototype=new CABLES.Op,Ops.Boolean.IfTrueThen=function(){function e(){r.isLinked()||t()}function t(){o.get()||o.get()>=1?a.trigger():i.trigger()}Op.apply(this,arguments);var n=this,r=n.addInPort(new Port(n,"exe",OP_PORT_TYPE_FUNCTION)),o=n.addInPort(new Port(n,"boolean",OP_PORT_TYPE_VALUE,{display:"bool"})),a=n.addOutPort(new Port(n,"then",OP_PORT_TYPE_FUNCTION)),i=n.addOutPort(new Port(n,"else",OP_PORT_TYPE_FUNCTION));o.set(!1),o.onValueChanged=e,r.onTriggered=t},Ops.Boolean.IfTrueThen.prototype=new CABLES.Op,Ops.Gl.Matrix.Transform=function(){function e(){h=!1,(0!==a.get()||0!==i.get()||0!==l.get())&&(h=!0),vec3.set(g,a.get(),i.get(),l.get()),x=!1}function t(){T=!1,0!==s.get()&&(T=!0),vec3.set(p,s.get(),s.get(),s.get()),m=!1}Op.apply(this,arguments);var n=this,r=n.addInPort(new Port(n,"render",OP_PORT_TYPE_FUNCTION)),o=n.addOutPort(new Port(n,"trigger",OP_PORT_TYPE_FUNCTION)),a=n.addInPort(new Port(n,"posX"),0),i=n.addInPort(new Port(n,"posY"),0),l=n.addInPort(new Port(n,"posZ"),0),s=n.addInPort(new Port(n,"scale")),d=n.addInPort(new Port(n,"rotX")),u=n.addInPort(new Port(n,"rotY")),c=n.addInPort(new Port(n,"rotZ")),f=n.patch.cgl,g=vec3.create(),p=vec3.create(),P=mat4.create();mat4.identity(P);var T=!1,h=!1,x=!0,m=!0,v=!0;s.setUiAttribs({divider:!0}),r.onTriggered=function(){var r=!1;x&&(e(),r=!0),m&&(t(),r=!0),v&&(r=!0),r&&O(),f.pushModelMatrix(),mat4.multiply(f.mvMatrix,f.mvMatrix,P),o.trigger(),f.popModelMatrix(),CABLES.UI&&gui.patch().isCurrentOp(n)&&gui.setTransformGizmo({posX:a,posY:i,posZ:l})},n.transform3d=function(){return{pos:[a,i,l]}};var O=function(){mat4.identity(P),h&&mat4.translate(P,P,g),0!==d.get()&&mat4.rotateX(P,P,d.get()*CGL.DEG2RAD),0!==u.get()&&mat4.rotateY(P,P,u.get()*CGL.DEG2RAD),0!==c.get()&&mat4.rotateZ(P,P,c.get()*CGL.DEG2RAD),T&&mat4.scale(P,P,p),v=!1},_=function(){x=!0},m=function(){m=!0},v=function(){v=!0};d.onChange=v,u.onChange=v,c.onChange=v,s.onChange=m,a.onChange=_,i.onChange=_,l.onChange=_,d.set(0),u.set(0),c.set(0),s.set(1),a.set(0),i.set(0),l.set(0),O()},Ops.Gl.Matrix.Transform.prototype=new CABLES.Op,Ops.Math.Sum=function(){function e(){var e=r.get()+o.get();isNaN(e)||n.set(e)}Op.apply(this,arguments);var t=this;t.name="sum";var n=t.addOutPort(new Port(t,"result")),r=t.addInPort(new Port(t,"number1")),o=t.addInPort(new Port(t,"number2"));r.onValueChanged=e,o.onValueChanged=e,r.set(1),o.set(1)},Ops.Math.Sum.prototype=new CABLES.Op,Ops.Gl.Matrix.ScaleXYZ=function(){Op.apply(this,arguments);var e=this,t=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),n=e.addInPort(new Port(e,"x")),r=e.addInPort(new Port(e,"y")),o=e.addInPort(new Port(e,"z")),a=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),i=e.patch.cgl,l=vec3.create(),s=mat4.create();mat4.identity(s);var d=!0;t.onTriggered=function(){d&&(vec3.set(l,n.get(),r.get(),o.get()),mat4.identity(s),mat4.scale(s,s,l)),i.pushModelMatrix(),mat4.multiply(i.mvMatrix,i.mvMatrix,s),a.trigger(),i.popModelMatrix()};var u=function(){d=!0};n.set(1),r.set(1),o.set(1),n.onValueChange(u),r.onValueChange(u),o.onValueChange(u)},Ops.Gl.Matrix.ScaleXYZ.prototype=new CABLES.Op,Ops.Gl.TextureEffects.Noise.SimplexNoise=function(){Op.apply(this,arguments);var e=this;e.name="SimplexNoise";var t=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),n=e.addInPort(new Port(e,"smoothness",OP_PORT_TYPE_VALUE,{})),r=e.addInPort(new Port(e,"scale",OP_PORT_TYPE_VALUE,{})),o=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),a=e.addInPort(new Port(e,"x",OP_PORT_TYPE_VALUE,{})),i=e.addInPort(new Port(e,"y",OP_PORT_TYPE_VALUE,{})),l=e.addInPort(new Port(e,"time",OP_PORT_TYPE_VALUE,{})),s=e.patch.cgl;l.set(.314),n.set(1),r.set(1),a.set(0),i.set(0);var d=new CGL.Shader(s),u="".endl()+"precision highp float;".endl()+"IN vec2 texCoord;".endl()+"uniform sampler2D tex;".endl()+"uniform float smoothness;".endl()+"uniform float scale;".endl()+"uniform float seed;".endl()+"uniform float x;".endl()+"uniform float y;".endl()+"uniform float time;".endl()+"".endl()+"void FAST32_hash_3D(    vec3 gridcell,".endl()+"                        vec3 v1_mask,       //  user definable v1 and v2.  ( 0s and 1s )".endl()+"                        vec3 v2_mask,".endl()+"                        out vec4 hash_0,".endl()+"                        out vec4 hash_1,".endl()+"                        out vec4 hash_2 )       //  generates 3 random numbers for each of the 4 3D cell corners.  cell  corners:  v0=0,0,0  v3=1,1,1  the other two are user definable".endl()+"{".endl()+"    //    gridcell is assumed to be an integer coordinate".endl()+"".endl()+"    //  TODO:   these constants need tweaked to find the best possible noise.".endl()+"    //          probably requires some kind of brute force computational searching or something....".endl()+"    const vec2 OFFSET = vec2( 50.0, 161.0 );".endl()+"    const float DOMAIN = 69.0;".endl()+"    const vec3 SOMELARGEFLOATS = vec3( 635.298681, 682.357502, 668.926525 );".endl()+"    const vec3 ZINC = vec3( 48.500388, 65.294118, 63.934599 );".endl()+"".endl()+"    //  truncate the domain".endl()+"    gridcell.xyz = gridcell.xyz - floor(gridcell.xyz * ( 1.0 / DOMAIN )) * DOMAIN;".endl()+"    vec3 gridcell_inc1 = step( gridcell, vec3( DOMAIN - 1.5 ) ) * ( gridcell + 1.0 );".endl()+"".endl()+"    //  compute x*x*y*y for the 4 corners".endl()+"    vec4 P = vec4( gridcell.xy, gridcell_inc1.xy ) + OFFSET.xyxy;".endl()+"    P *= P;".endl()+"    vec4 V1xy_V2xy = mix( P.xyxy, P.zwzw, vec4( v1_mask.xy, v2_mask.xy ) );     //  appl y mask for v1 and v2".endl()+"    P = vec4( P.x, V1xy_V2xy.xz, P.z ) * vec4( P.y, V1xy_V2xy.yw, P.w );".endl()+"".endl()+"    //  get the lowz and highz mods".endl()+"    vec3 lowz_mods = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + gridcell.zzz * ZINC.xyz ) );".endl()+"    vec3 highz_mods = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + gridcell_inc1.zzz * ZINC.xyz ) );".endl()+"".endl()+"    //  appl mask for v1 and v2 mod values".endl()+"    v1_mask = ( v1_mask.z < 0.5 ) ? lowz_mods : highz_mods;".endl()+"    v2_mask = ( v2_mask.z < 0.5 ) ? lowz_mods : highz_mods;".endl()+"".endl()+"    //  compute the final hash".endl()+"    hash_0 = fract( P * vec4( lowz_mods.x, v1_mask.x, v2_mask.x, highz_mods.x ) );".endl()+"    hash_1 = fract( P * vec4( lowz_mods.y, v1_mask.y, v2_mask.y, highz_mods.y ) );".endl()+"    hash_2 = fract( P * vec4( lowz_mods.z, v1_mask.z, v2_mask.z, highz_mods.z ) );".endl()+"}".endl()+"".endl()+"//".endl()+"//  Given an arbitrary 3D point this calculates the 4 vectors from the corners of the simplex pyramid to the point".endl()+"//  It also returns the integer grid index information for the corners".endl()+"//".endl()+"void Simplex3D_GetCornerVectors(    vec3 P,                 //  input point".endl()+"                                    out vec3 Pi,            //  integer grid index for the origin".endl()+"                                    out vec3 Pi_1,          //  offsets for the 2nd and 3rd corners.  ( the 4th = Pi + 1.0 )".endl()+"                                    out vec3 Pi_2,".endl()+"                                    out vec4 v1234_x,       //  vectors from the 4 corners to the intput point".endl()+"                                    out vec4 v1234_y,".endl()+"                                    out vec4 v1234_z )".endl()+"{".endl()+"    //".endl()+"    //  Simplex math from Stefan Gustavsons and Ian McEwans work at...".endl()+"    //  http://github.com/ashima/webgl-noise".endl()+"    //".endl()+"".endl()+"    //  simplex math constants".endl()+"    const float SKEWFACTOR = 1.0/3.0;".endl()+"    const float UNSKEWFACTOR = 1.0/6.0;".endl()+"    const float SIMPLEX_CORNER_POS = 0.5;".endl()+"    const float SIMPLEX_PYRAMID_HEIGHT = 0.70710678118654752440084436210485;    // sqrt( 0.5 )  height of simplex pyramid.".endl()+"".endl()+"    P *= SIMPLEX_PYRAMID_HEIGHT;        // scale space so we can have an approx feature size of 1.0  ( optional )".endl()+"".endl()+"    //  Find the vectors to the corners of our simplex pyramid".endl()+"    Pi = floor( P + dot( P, vec3( SKEWFACTOR) ) );".endl()+"    vec3 x0 = P - Pi + dot(Pi, vec3( UNSKEWFACTOR ) );".endl()+"    vec3 g = step(x0.yzx, x0.xyz);".endl()+"    vec3 l = 1.0 - g;".endl()+"    Pi_1 = min( g.xyz, l.zxy );".endl()+"    Pi_2 = max( g.xyz, l.zxy );".endl()+"    vec3 x1 = x0 - Pi_1 + UNSKEWFACTOR;".endl()+"    vec3 x2 = x0 - Pi_2 + SKEWFACTOR;".endl()+"    vec3 x3 = x0 - SIMPLEX_CORNER_POS;".endl()+"".endl()+"    //  pack them into a parallel-friendly arrangement".endl()+"    v1234_x = vec4( x0.x, x1.x, x2.x, x3.x );".endl()+"    v1234_y = vec4( x0.y, x1.y, x2.y, x3.y );".endl()+"    v1234_z = vec4( x0.z, x1.z, x2.z, x3.z );".endl()+"}".endl()+"".endl()+"//".endl()+"//  Calculate the weights for the 3D simplex surflet".endl()+"//".endl()+"vec4 Simplex3D_GetSurfletWeights(   vec4 v1234_x,".endl()+"                                    vec4 v1234_y,".endl()+"                                    vec4 v1234_z )".endl()+"{".endl()+"    //  perlins original implementation uses the surlet falloff formula of (0.6-x*x)^4.".endl()+"    //  This is buggy as it can cause discontinuities along simplex faces.  (0.5-x*x)^3 solves this and gives an almost identical curve".endl()+"".endl()+"    //  evaluate surflet. f(x)=(0.5-x*x)^3".endl()+"    vec4 surflet_weights = v1234_x * v1234_x + v1234_y * v1234_y + v1234_z * v1234_z;".endl()+"    surflet_weights = max(0.5 - surflet_weights, 0.0);      //  0.5 here represents the closest distance (squared) of any simplex pyramid corner to any of its planes.  ie, SIMPLEX_PYRAMID_HEIGHT^2".endl()+"    return surflet_weights*surflet_weights*surflet_weights;".endl()+"}".endl()+"".endl()+"".endl()+"".endl()+"//".endl()+"//  SimplexPerlin3D  ( simplex gradient noise )".endl()+"//  Perlin noise over a simplex (tetrahedron) grid".endl()+"//  Return value range of -1.0->1.0".endl()+"//  http://briansharpe.files.wordpress.com/2012/01/simplexperlinsample.jpg".endl()+"//".endl()+"//  Implementation originally based off Stefan Gustavsons and Ian McEwans work at...".endl()+"//  http://github.com/ashima/webgl-noise".endl()+"//".endl()+"float SimplexPerlin3D(vec3 P)".endl()+"{".endl()+"    //  calculate the simplex vector and index math".endl()+"    vec3 Pi;".endl()+"    vec3 Pi_1;".endl()+"    vec3 Pi_2;".endl()+"    vec4 v1234_x;".endl()+"    vec4 v1234_y;".endl()+"    vec4 v1234_z;".endl()+"    Simplex3D_GetCornerVectors( P, Pi, Pi_1, Pi_2, v1234_x, v1234_y, v1234_z );".endl()+"".endl()+"    //  generate the random vectors".endl()+"    //  ( various hashing methods listed in order of speed )".endl()+"    vec4 hash_0;".endl()+"    vec4 hash_1;".endl()+"    vec4 hash_2;".endl()+"    FAST32_hash_3D( Pi, Pi_1, Pi_2, hash_0, hash_1, hash_2 );".endl()+"    //SGPP_hash_3D( Pi, Pi_1, Pi_2, hash_0, hash_1, hash_2 );".endl()+"    hash_0 -= 0.49999;".endl()+"    hash_1 -= 0.49999;".endl()+"    hash_2 -= 0.49999;".endl()+"".endl()+"    //  evaluate gradients".endl()+"    vec4 grad_results = inversesqrt( hash_0 * hash_0 + hash_1 * hash_1 + hash_2 * hash_2 ) * ( hash_0 * v1234_x + hash_1 * v1234_y + hash_2 * v1234_z );".endl()+"".endl()+"    //  Normalization factor to scale the final result to a strict 1.0->-1.0 range".endl()+"    //  x = sqrt( 0.75 ) * 0.5".endl()+"    //  NF = 1.0 / ( x * ( ( 0.5 * x*x ) ^ 3 ) * 2.0 )".endl()+"    //  http://briansharpe.wordpress.com/2012/01/13/simplex-noise/#comment-36".endl()+"     float FINAL_NORMALIZATION = 37.837227241611314102871574478976*smoothness;".endl()+"".endl()+"    //  sum with the surflet and return".endl()+"    return dot( Simplex3D_GetSurfletWeights( v1234_x, v1234_y, v1234_z ), grad_results ) * FINAL_NORMALIZATION;".endl()+"}".endl()+"void main()".endl()+"{".endl()+"   vec2 p=vec2(texCoord.x-0.5,texCoord.y-0.5);".endl()+"   p=p*scale;".endl()+"   p=vec2(p.x+0.5-x,p.y+0.5-y);".endl()+"   float v=SimplexPerlin3D(vec3(p.x,p.y,time))*0.5+0.5;".endl()+"   vec4 col=vec4(v,v,v,1.0);".endl()+"   gl_FragColor = col;".endl()+"}";
d.setSource(d.getDefaultVertexShader(),u);var c=(new CGL.Uniform(d,"t","tex",0),new CGL.Uniform(d,"f","smoothness",n.get())),f=new CGL.Uniform(d,"f","scale",r.get()),g=new CGL.Uniform(d,"f","x",a.get()),p=new CGL.Uniform(d,"f","y",i.get()),P=new CGL.Uniform(d,"f","time",l.get());a.onValueChanged=function(){g.setValue(a.get()/100)},i.onValueChanged=function(){p.setValue(i.get()/100)},l.onValueChanged=function(){P.setValue(l.get()/100)},n.onValueChanged=function(){c.setValue(n.get())},r.onValueChanged=function(){f.setValue(r.get())},t.onTriggered=function(){s.currentTextureEffect&&(s.setShader(d),s.currentTextureEffect.bind(),s.gl.activeTexture(s.gl.TEXTURE0),s.gl.bindTexture(s.gl.TEXTURE_2D,s.currentTextureEffect.getCurrentSourceTexture().tex),s.currentTextureEffect.finish(),s.setPreviousShader(),o.trigger())}},Ops.Gl.TextureEffects.Noise.SimplexNoise.prototype=new CABLES.Op,Ops.Gl.TextureEffects.Border=function(){Op.apply(this,arguments);var e=this,t={};t.border_frag="\n\nIN vec2 texCoord;\nUNI float width;\nUNI sampler2D tex;\nUNI float r;\nUNI float g;\nUNI float b;\nUNI float aspect;\n\nUNI bool smoothed;\n\nvoid main()\n{\n   vec4 col=texture2D(tex,texCoord);\n\n    if(!smoothed)\n    {\n       if( texCoord.x>1.0-width/3.0 || texCoord.y>1.0-width/aspect/3.0 || texCoord.y<width/aspect/3.0 || texCoord.x<width/3.0 ) col = vec4(r,g,b, 1.0);\n       gl_FragColor = col;\n    }\n    else\n    {\n       float f=smoothstep(0.0,width,texCoord.x)-smoothstep(1.0-width,1.0,texCoord.x);\n       f*=smoothstep(0.0,width/aspect,texCoord.y);\n       f*=smoothstep(1.0,1.0-width/aspect,texCoord.y);\n       gl_FragColor = mix(col,vec4(r,g,b, 1.0),1.0-f);\n    }\n}",e.name="border";var n=e.addInPort(new Port(e,"render",OP_PORT_TYPE_FUNCTION)),r=e.addOutPort(new Port(e,"trigger",OP_PORT_TYPE_FUNCTION)),o=e.inValueBool("Smooth",!1),a=e.patch.cgl,i=new CGL.Shader(a);i.setSource(i.getDefaultVertexShader(),t.border_frag);var l=(new CGL.Uniform(i,"t","tex",0),new CGL.Uniform(i,"f","aspect",0)),s=(new CGL.Uniform(i,"b","smoothed",o),e.addInPort(new Port(e,"width",OP_PORT_TYPE_VALUE,{display:"range"})));s.set(.1);var d=new CGL.Uniform(i,"f","width",s.get());s.onValueChange(function(){d.setValue(s.get()/2)});var u=e.addInPort(new Port(e,"diffuse r",OP_PORT_TYPE_VALUE,{display:"range",colorPick:"true"}));u.onValueChanged=function(){u.uniform?u.uniform.setValue(u.get()):u.uniform=new CGL.Uniform(i,"f","r",u.get())};var c=e.addInPort(new Port(e,"diffuse g",OP_PORT_TYPE_VALUE,{display:"range"}));c.onValueChanged=function(){c.uniform?c.uniform.setValue(c.get()):c.uniform=new CGL.Uniform(i,"f","g",c.get())};var f=e.addInPort(new Port(e,"diffuse b",OP_PORT_TYPE_VALUE,{display:"range"}));f.onValueChanged=function(){f.uniform?f.uniform.setValue(f.get()):f.uniform=new CGL.Uniform(i,"f","b",f.get())},u.set(Math.random()),c.set(Math.random()),f.set(Math.random()),n.onTriggered=function(){if(CGL.TextureEffect.checkOpInEffect(e)){var t=a.currentTextureEffect.getCurrentSourceTexture();l.set(t.height/t.width),a.setShader(i),a.currentTextureEffect.bind(),a.gl.activeTexture(a.gl.TEXTURE0),a.gl.bindTexture(a.gl.TEXTURE_2D,t.tex),a.currentTextureEffect.finish(),a.setPreviousShader(),r.trigger()}}},Ops.Gl.TextureEffects.Border.prototype=new CABLES.Op,Ops.Gl.TextureEffects.Vignette2=function(){Op.apply(this,arguments);var e=this,t={};t.vignette_frag="IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float lensRadius1;\nUNI float aspect;\nUNI float amount;\nUNI float sharp;\n\nUNI float r,g,b;\n\nvoid main()\n{\n   vec4 vcol=vec4(r,g,b,1.0);\n   vec4 col=texture2D(tex,texCoord);\n   vec2 tcPos=vec2(texCoord.x,(texCoord.y-0.5)*aspect+0.5);\n   float dist = distance(tcPos, vec2(0.5,0.5));\n   float am = (1.0-smoothstep( (lensRadius1+0.5), (lensRadius1*0.99+0.5)*sharp, dist));\n\n   col=mix(col,vcol,am*amount);\n\n   gl_FragColor = col;\n}\n",e.name="Vignette";var n=e.inFunction("render"),r=e.outFunction("trigger"),o=e.inValueSlider("Amount",1),a=e.inValueSlider("Radius",.5),i=e.inValueSlider("sharp",.25),l=e.inValue("Aspect",1),s=e.addInPort(new Port(e,"r",OP_PORT_TYPE_VALUE,{display:"range",colorPick:"true"})),d=e.addInPort(new Port(e,"g",OP_PORT_TYPE_VALUE,{display:"range"})),u=e.addInPort(new Port(e,"b",OP_PORT_TYPE_VALUE,{display:"range"})),c=e.patch.cgl,f=new CGL.Shader(c);f.setSource(f.getDefaultVertexShader(),t.vignette_frag);new CGL.Uniform(f,"t","tex",0),new CGL.Uniform(f,"f","lensRadius1",a),new CGL.Uniform(f,"f","aspect",l),new CGL.Uniform(f,"f","amount",o),new CGL.Uniform(f,"f","sharp",i),new CGL.Uniform(f,"f","r",s),new CGL.Uniform(f,"f","g",d),new CGL.Uniform(f,"f","b",u);n.onTriggered=function(){CGL.TextureEffect.checkOpInEffect(e)&&(c.setShader(f),c.currentTextureEffect.bind(),c.gl.activeTexture(c.gl.TEXTURE0),c.gl.bindTexture(c.gl.TEXTURE_2D,c.currentTextureEffect.getCurrentSourceTexture().tex),c.currentTextureEffect.finish(),c.setPreviousShader(),r.trigger())}},Ops.Gl.TextureEffects.Vignette2.prototype=new CABLES.Op;